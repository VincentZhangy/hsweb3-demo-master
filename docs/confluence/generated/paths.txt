
h2. 资源 {anchor:paths}

h3. OAuth2.0-客户端-token {anchor:59a0313f997b7b23e5740d1300feb341}
O Auth 2 User Token Controller


h4. 根据动态条件查询 {anchor:listusingget_8}
{noformat}
GET /oauth2-user-token
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«OAuth2UserTokenEntity»»|#652849cecf290786c83f3915b818f8c1]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-user-token
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "accessToken" : "string",
      "clientId" : "string",
      "clientUserId" : "string",
      "createTime" : 0,
      "expiresIn" : 0,
      "grantType" : "string",
      "id" : "string",
      "properties" : "object",
      "refreshToken" : "string",
      "scope" : "string",
      "serverId" : "string",
      "serverUserId" : "string",
      "updateTime" : 0
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_8}
{noformat}
GET /oauth2-user-token/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-user-token/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_16}
{noformat}
GET /oauth2-user-token/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«OAuth2UserTokenEntity»»|#19dfe8ccdff0ac64ffddf20e38f600c3]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-user-token/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "accessToken" : "string",
    "clientId" : "string",
    "clientUserId" : "string",
    "createTime" : 0,
    "expiresIn" : 0,
    "grantType" : "string",
    "id" : "string",
    "properties" : "object",
    "refreshToken" : "string",
    "scope" : "string",
    "serverId" : "string",
    "serverUserId" : "string",
    "updateTime" : 0
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_8}
{noformat}
GET /oauth2-user-token/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«OAuth2UserTokenEntity»»|#19dfe8ccdff0ac64ffddf20e38f600c3]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-user-token/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "accessToken" : "string",
    "clientId" : "string",
    "clientUserId" : "string",
    "createTime" : 0,
    "expiresIn" : 0,
    "grantType" : "string",
    "id" : "string",
    "properties" : "object",
    "refreshToken" : "string",
    "scope" : "string",
    "serverId" : "string",
    "serverUserId" : "string",
    "updateTime" : 0
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_17}
{noformat}
GET /oauth2-user-token/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«OAuth2UserTokenEntity»|#9ce3adcac2f6b56f6a853c19d034f501]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-user-token/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "accessToken" : "string",
    "clientId" : "string",
    "clientUserId" : "string",
    "createTime" : 0,
    "expiresIn" : 0,
    "grantType" : "string",
    "id" : "string",
    "properties" : "object",
    "refreshToken" : "string",
    "scope" : "string",
    "serverId" : "string",
    "serverUserId" : "string",
    "updateTime" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. OAuth2.0-客户端-服务配置 {anchor:955e2c446ae9a1480748affdd2cc2a30}
O Auth 2 Server Config Controller


h4. 新增 {anchor:addusingpost_6}
{noformat}
POST /oauth2-server-config
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[OAuth2ServerConfigEntity|#oauth2serverconfigentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-server-config
{code}


h6. 请求 body
{code:language=json}
{
  "accessTokenUrl" : "string",
  "apiBaseUrl" : "string",
  "authUrl" : "string",
  "clientId" : "string",
  "clientSecret" : "string",
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "properties" : "object",
  "provider" : "string",
  "redirectUri" : "string",
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_7}
{noformat}
GET /oauth2-server-config
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«OAuth2ServerConfigEntity»»|#9418f129377a4c78a87d34891784b4ad]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-server-config
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "accessTokenUrl" : "string",
      "apiBaseUrl" : "string",
      "authUrl" : "string",
      "clientId" : "string",
      "clientSecret" : "string",
      "describe" : "string",
      "id" : "string",
      "name" : "string",
      "properties" : "object",
      "provider" : "string",
      "redirectUri" : "string",
      "status" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_6}
{noformat}
PATCH /oauth2-server-config
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[OAuth2ServerConfigEntity|#oauth2serverconfigentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-server-config
{code}


h6. 请求 body
{code:language=json}
{
  "accessTokenUrl" : "string",
  "apiBaseUrl" : "string",
  "authUrl" : "string",
  "clientId" : "string",
  "clientSecret" : "string",
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "properties" : "object",
  "provider" : "string",
  "redirectUri" : "string",
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_7}
{noformat}
GET /oauth2-server-config/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-server-config/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_14}
{noformat}
GET /oauth2-server-config/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«OAuth2ServerConfigEntity»»|#7c0de841c030a56e36a3592bab2f4b70]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-server-config/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "accessTokenUrl" : "string",
    "apiBaseUrl" : "string",
    "authUrl" : "string",
    "clientId" : "string",
    "clientSecret" : "string",
    "describe" : "string",
    "id" : "string",
    "name" : "string",
    "properties" : "object",
    "provider" : "string",
    "redirectUri" : "string",
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_7}
{noformat}
GET /oauth2-server-config/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«OAuth2ServerConfigEntity»»|#7c0de841c030a56e36a3592bab2f4b70]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-server-config/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "accessTokenUrl" : "string",
    "apiBaseUrl" : "string",
    "authUrl" : "string",
    "clientId" : "string",
    "clientSecret" : "string",
    "describe" : "string",
    "id" : "string",
    "name" : "string",
    "properties" : "object",
    "provider" : "string",
    "redirectUri" : "string",
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_15}
{noformat}
GET /oauth2-server-config/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«OAuth2ServerConfigEntity»|#f49c55e99fe094081dd3c91f972f307a]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-server-config/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "accessTokenUrl" : "string",
    "apiBaseUrl" : "string",
    "authUrl" : "string",
    "clientId" : "string",
    "clientSecret" : "string",
    "describe" : "string",
    "id" : "string",
    "name" : "string",
    "properties" : "object",
    "provider" : "string",
    "redirectUri" : "string",
    "status" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_5}
{noformat}
PUT /oauth2-server-config/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[OAuth2ServerConfigEntity|#oauth2serverconfigentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-server-config/string
{code}


h6. 请求 body
{code:language=json}
{
  "accessTokenUrl" : "string",
  "apiBaseUrl" : "string",
  "authUrl" : "string",
  "clientId" : "string",
  "clientSecret" : "string",
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "properties" : "object",
  "provider" : "string",
  "redirectUri" : "string",
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_5}
{noformat}
DELETE /oauth2-server-config/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-server-config/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. OAuth2.0-客户端-请求服务 {anchor:35f06fe9751dba83727cd3305a89abdd}
O Auth 2 Client Controller


h4. 跳转至OAuth2.0服务授权页面 {anchor:bootusingget}
{noformat}
GET /oauth2/boot/{serverId}
{noformat}


h5. 参数

||类型||名称||说明||类型||默认值||
|*Path*|*serverId*\\ \\ _必填_||serverId||string|| |
|*Query*|*redirect*\\ \\ _可选_||redirect||string||{noformat}"/"{noformat}|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[RedirectView|#redirectview]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2/boot/string
{code}


h6. 请求 query
{code:language=json}
{
  "redirect" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "applicationContext" : {
    "applicationName" : "string",
    "autowireCapableBeanFactory" : { },
    "beanDefinitionCount" : 0,
    "beanDefinitionNames" : [ "string" ],
    "classLoader" : {
      "parent" : {
        "parent" : "..."
      }
    },
    "displayName" : "string",
    "environment" : {
      "activeProfiles" : [ "string" ],
      "defaultProfiles" : [ "string" ]
    },
    "id" : "string",
    "parent" : {
      "applicationName" : "string",
      "autowireCapableBeanFactory" : { },
      "beanDefinitionCount" : 0,
      "beanDefinitionNames" : [ "string" ],
      "classLoader" : {
        "parent" : "..."
      },
      "displayName" : "string",
      "environment" : {
        "activeProfiles" : [ "string" ],
        "defaultProfiles" : [ "string" ]
      },
      "id" : "string",
      "parent" : "...",
      "parentBeanFactory" : { },
      "startupDate" : 0
    },
    "parentBeanFactory" : { },
    "startupDate" : 0
  },
  "attributesMap" : "object",
  "beanName" : "string",
  "contentType" : "string",
  "exposePathVariables" : true,
  "hosts" : [ "string" ],
  "propagateQueryProperties" : true,
  "redirectView" : true,
  "requestContextAttribute" : "string",
  "staticAttributes" : "object",
  "url" : "string"
}
{code}


h4. 申请一个state {anchor:requeststateusingget}
{noformat}
GET /oauth2/state
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2/state
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. OAuth2.0-服务-客户端管理 {anchor:a32a50dc915c3dd1c22ded38de05804c}
O Auth 2 Client Config Controller


h4. 获取全部客户端 {anchor:getallclientusingget}
{noformat}
GET /oauth2-client-config
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«OAuth2Client»»|#04bd1f7c2172df55357d15dd7a4b020d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-client-config
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "createTime" : 0,
    "defaultGrantScope" : [ "string" ],
    "id" : "string",
    "name" : "string",
    "ownerId" : "string",
    "redirectUri" : "string",
    "secret" : "string",
    "status" : "string",
    "supportGrantTypes" : [ "string" ]
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 保存客户端 {anchor:saveorupdateusingpatch_5}
{noformat}
PATCH /oauth2-client-config
{noformat}


h5. 说明
如果客户端不存在则自动新增


h5. 参数

||类型||名称||说明||类型||
|*Body*|*clientEntity*\\ \\ _必填_||clientEntity||[OAuth2ClientEntity|#oauth2cliententity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«OAuth2Client»|#ebb1050c759c13591fdd208d058d0332]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-client-config
{code}


h6. 请求 body
{code:language=json}
{
  "createTime" : 0,
  "creatorId" : "string",
  "defaultGrantScope" : [ "string" ],
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "ownerId" : "string",
  "properties" : "object",
  "redirectUri" : "string",
  "secret" : "string",
  "status" : "string",
  "supportGrantTypes" : [ "string" ],
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "createTime" : 0,
    "defaultGrantScope" : [ "string" ],
    "id" : "string",
    "name" : "string",
    "ownerId" : "string",
    "redirectUri" : "string",
    "secret" : "string",
    "status" : "string",
    "supportGrantTypes" : [ "string" ]
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据绑定到用户到客户端 {anchor:getbyowneridusingget}
{noformat}
GET /oauth2-client-config/owner/{userId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*userId*\\ \\ _必填_||userId||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«OAuth2Client»|#ebb1050c759c13591fdd208d058d0332]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-client-config/owner/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "createTime" : 0,
    "defaultGrantScope" : [ "string" ],
    "id" : "string",
    "name" : "string",
    "ownerId" : "string",
    "redirectUri" : "string",
    "secret" : "string",
    "status" : "string",
    "supportGrantTypes" : [ "string" ]
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据id获取客户端 {anchor:getbyidusingget}
{noformat}
GET /oauth2-client-config/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«OAuth2Client»|#ebb1050c759c13591fdd208d058d0332]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-client-config/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "createTime" : 0,
    "defaultGrantScope" : [ "string" ],
    "id" : "string",
    "name" : "string",
    "ownerId" : "string",
    "redirectUri" : "string",
    "secret" : "string",
    "status" : "string",
    "supportGrantTypes" : [ "string" ]
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除客户端 {anchor:removebyidusingdelete}
{noformat}
DELETE /oauth2-client-config/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«OAuth2Client»|#ebb1050c759c13591fdd208d058d0332]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2-client-config/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "createTime" : 0,
    "defaultGrantScope" : [ "string" ],
    "id" : "string",
    "name" : "string",
    "ownerId" : "string",
    "redirectUri" : "string",
    "secret" : "string",
    "status" : "string",
    "supportGrantTypes" : [ "string" ]
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. OAuth2.0-服务-授权 {anchor:4a49accf63f16ee159f480d86546387e}
O Auth 2 Authorize Controller


h4. implicit方式申请token {anchor:authorizebyimplicitusingget}
{noformat}
GET /oauth2/authorize
{noformat}


h5. 参数

||类型||名称||说明||类型||默认值||
|*Query*|*client_id*\\ \\ _必填_|| ||string|| |
|*Query*|*redirect_uri*\\ \\ _必填_||redirect_uri||string|| |
|*Query*|*response_type*\\ \\ _必填_|| ||enum (token)||{noformat}"token"{noformat}|
|*Query*|*state*\\ \\ _必填_||state||string|| |


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ImplicitAccessTokenModel|#implicitaccesstokenmodel]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2/authorize
{code}


h6. 请求 query
{code:language=json}
{
  "client_id" : "string",
  "redirect_uri" : "string",
  "response_type" : "string",
  "state" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "access_token" : "string",
  "expires_in" : 0,
  "redirect_uri" : "string",
  "state" : "string",
  "token_type" : "string"
}
{code}


h3. OAuth2.0-服务-申请token {anchor:525f69577ad7268e2a2f977209f3ecf9}
O Auth 2 Token Controller


h4. implicit方式申请token {anchor:authorizebyimplicitusingget}
{noformat}
GET /oauth2/authorize
{noformat}


h5. 参数

||类型||名称||说明||类型||默认值||
|*Query*|*client_id*\\ \\ _必填_|| ||string|| |
|*Query*|*redirect_uri*\\ \\ _必填_||redirect_uri||string|| |
|*Query*|*response_type*\\ \\ _必填_|| ||enum (token)||{noformat}"token"{noformat}|
|*Query*|*state*\\ \\ _必填_||state||string|| |


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ImplicitAccessTokenModel|#implicitaccesstokenmodel]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2/authorize
{code}


h6. 请求 query
{code:language=json}
{
  "client_id" : "string",
  "redirect_uri" : "string",
  "response_type" : "string",
  "state" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "access_token" : "string",
  "expires_in" : 0,
  "redirect_uri" : "string",
  "state" : "string",
  "token_type" : "string"
}
{code}


h4. 申请token {anchor:requesttokenusingpost}
{noformat}
POST /oauth2/token
{noformat}


h5. 说明
具体请求方式请参照: http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html


h5. 参数

||类型||名称||说明||类型||
|*Header*|*Authorization*\\ \\ _可选_|| ||string|
|*Query*|*client_id*\\ \\ _必填_|| ||string|
|*Query*|*client_secret*\\ \\ _可选_|| ||string|
|*Query*|*code*\\ \\ _可选_|| ||string|
|*Query*|*grant_type*\\ \\ _可选_||grant_type||enum (authorization_code, client_credentials, password, refresh_token, implicit)|
|*Query*|*redirect_uri*\\ \\ _可选_|| ||string|
|*Query*|*refresh_token*\\ \\ _可选_|| ||string|
|*Query*|*scope*\\ \\ _可选_|| ||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[AccessTokenModel|#accesstokenmodel]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2/token
{code}


h6. 请求 header
{code:language=json}
"string"
{code}


h6. 请求 query
{code:language=json}
{
  "client_id" : "string",
  "client_secret" : "string",
  "code" : "string",
  "grant_type" : "string",
  "redirect_uri" : "string",
  "refresh_token" : "string",
  "scope" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "access_token" : "string",
  "expires_in" : 0,
  "refresh_token" : "string",
  "scope" : "string",
  "token_type" : "string"
}
{code}


h3. OAuth2.0-服务-获取用户信息 {anchor:27362e9e32395b0a977ed4ec9208e3fc}
O Auth 2 User Info Controller


h4. 根据accessToken获取对应用户信息 {anchor:getloginuserusingget}
{noformat}
GET /oauth2/user-auth-info
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*access_token*\\ \\ _必填_||access_token||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Authentication»|#91e04724f2ad858185d5fc280d46daa4]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2/user-auth-info
{code}


h6. 请求 query
{code:language=json}
{
  "access_token" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "attributes" : {
      "string" : "[#serializable]"
    },
    "permissions" : [ {
      "actions" : [ "string" ],
      "dataAccesses" : [ {
        "action" : "string",
        "type" : "string"
      } ],
      "id" : "string"
    } ],
    "roles" : [ {
      "id" : "string",
      "name" : "string"
    } ],
    "user" : {
      "id" : "string",
      "name" : "string",
      "type" : "string",
      "username" : "string"
    }
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据accessToken获取特定的用户信息 {anchor:getuserbyidusingget}
{noformat}
GET /oauth2/user-auth-info/{userId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*userId*\\ \\ _必填_||userId||string|
|*Query*|*access_token*\\ \\ _必填_||access_token||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Authentication»|#91e04724f2ad858185d5fc280d46daa4]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/oauth2/user-auth-info/string
{code}


h6. 请求 query
{code:language=json}
{
  "access_token" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "attributes" : {
      "string" : "[#serializable]"
    },
    "permissions" : [ {
      "actions" : [ "string" ],
      "dataAccesses" : [ {
        "action" : "string",
        "type" : "string"
      } ],
      "id" : "string"
    } ],
    "roles" : [ {
      "id" : "string",
      "name" : "string"
    } ],
    "user" : {
      "id" : "string",
      "name" : "string",
      "type" : "string",
      "username" : "string"
    }
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 动态脚本管理 {anchor:a5ccb4108d93b76acf9dbe0e1886805d}
Script Controller


h4. 新增 {anchor:addusingpost_15}
{noformat}
POST /script
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[ScriptEntity|#scriptentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "language" : "string",
  "name" : "string",
  "properties" : "object",
  "remark" : "string",
  "script" : "string",
  "status" : 0,
  "tag" : "string",
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_17}
{noformat}
GET /script
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«ScriptEntity»»|#b526184b0542731e9ce046cd15c7430f]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "id" : "string",
      "language" : "string",
      "name" : "string",
      "properties" : "object",
      "remark" : "string",
      "script" : "string",
      "status" : 0,
      "tag" : "string",
      "type" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_15}
{noformat}
PATCH /script
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[ScriptEntity|#scriptentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "language" : "string",
  "name" : "string",
  "properties" : "object",
  "remark" : "string",
  "script" : "string",
  "status" : 0,
  "tag" : "string",
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_17}
{noformat}
GET /script/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_34}
{noformat}
GET /script/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«ScriptEntity»»|#d6f39903f6ccd973fe4476e4bdd6b638]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "id" : "string",
    "language" : "string",
    "name" : "string",
    "properties" : "object",
    "remark" : "string",
    "script" : "string",
    "status" : 0,
    "tag" : "string",
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_17}
{noformat}
GET /script/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«ScriptEntity»»|#d6f39903f6ccd973fe4476e4bdd6b638]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "id" : "string",
    "language" : "string",
    "name" : "string",
    "properties" : "object",
    "remark" : "string",
    "script" : "string",
    "status" : 0,
    "tag" : "string",
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_35}
{noformat}
GET /script/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«ScriptEntity»|#75b3a1a20f80841af6d3065f6ad3b2f7]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "id" : "string",
    "language" : "string",
    "name" : "string",
    "properties" : "object",
    "remark" : "string",
    "script" : "string",
    "status" : 0,
    "tag" : "string",
    "type" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_14}
{noformat}
PUT /script/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[ScriptEntity|#scriptentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script/string
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "language" : "string",
  "name" : "string",
  "properties" : "object",
  "remark" : "string",
  "script" : "string",
  "status" : 0,
  "tag" : "string",
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_14}
{noformat}
DELETE /script/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 执行脚本 {anchor:executefotpostandputusingpost}
{noformat}
POST /script/{id}/execute
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*parameters*\\ \\ _可选_||parameters||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«object»|#4e3465260d0b339c0ae101c8a6821732]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script/string/execute
{code}


h6. 请求 body
{code:language=json}
{ }
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 执行脚本 {anchor:executeforgetusingget}
{noformat}
GET /script/{id}/execute
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Query*|*parameters*\\ \\ _可选_||parameters||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«object»|#4e3465260d0b339c0ae101c8a6821732]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script/string/execute
{code}


h6. 请求 query
{code:language=json}
{
  "parameters" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 执行脚本 {anchor:executefotpostandputusingput}
{noformat}
PUT /script/{id}/execute
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*parameters*\\ \\ _可选_||parameters||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«object»|#4e3465260d0b339c0ae101c8a6821732]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/script/string/execute
{code}


h6. 请求 body
{code:language=json}
{ }
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 动态表单-发布日志 {anchor:57667a7678c40da787d7021eb0230263}
Dynamic Form Deploy Log Controller


h4. 根据动态条件查询 {anchor:listusingget_4}
{noformat}
GET /dynamic/form-deploy-log
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«DynamicFormDeployLogEntity»»|#af1a0c73ed9afec5c76ebf1dce361e01]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form-deploy-log
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "deployTime" : 0,
      "formId" : "string",
      "id" : "string",
      "metaData" : "string",
      "properties" : "object",
      "status" : "string",
      "version" : 0
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_4}
{noformat}
GET /dynamic/form-deploy-log/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form-deploy-log/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_8}
{noformat}
GET /dynamic/form-deploy-log/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DynamicFormDeployLogEntity»»|#19f5d621630c200f26659affa8d245be]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form-deploy-log/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "deployTime" : 0,
    "formId" : "string",
    "id" : "string",
    "metaData" : "string",
    "properties" : "object",
    "status" : "string",
    "version" : 0
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_4}
{noformat}
GET /dynamic/form-deploy-log/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DynamicFormDeployLogEntity»»|#19f5d621630c200f26659affa8d245be]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form-deploy-log/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "deployTime" : 0,
    "formId" : "string",
    "id" : "string",
    "metaData" : "string",
    "properties" : "object",
    "status" : "string",
    "version" : 0
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_9}
{noformat}
GET /dynamic/form-deploy-log/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«DynamicFormDeployLogEntity»|#a2d83137608215d878bebe740d227f8d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form-deploy-log/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "deployTime" : 0,
    "formId" : "string",
    "id" : "string",
    "metaData" : "string",
    "properties" : "object",
    "status" : "string",
    "version" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 动态表单-数据操作 {anchor:a8f6f99caa07c8584569d49e661e9efb}
Dynamic Form Operation Controller


h4. 新增 {anchor:addusingpost_4}
{noformat}
POST /dynamic/form/operation/{formId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*formId*\\ \\ _必填_||formId||string|
|*Body*|*data*\\ \\ _必填_||data||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Map«string,object»»|#06af4f2009dab634c08e24b8b0f26c2c]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/operation/string
{code}


h6. 请求 body
{code:language=json}
{ }
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 动态查询 {anchor:selectpagerusingget}
{noformat}
GET /dynamic/form/operation/{formId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*formId*\\ \\ _必填_||formId||string|
|*Query*|*excludes*\\ \\ _可选_|| ||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_|| ||boolean|
|*Query*|*includes*\\ \\ _可选_|| ||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_|| ||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_|| ||integer (int32)|
|*Query*|*paging*\\ \\ _可选_|| ||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_|| ||string|
|*Query*|*sorts[0].order*\\ \\ _可选_|| ||string|
|*Query*|*sorts[0].type*\\ \\ _可选_|| ||string|
|*Query*|*terms[0].column*\\ \\ _可选_|| ||string|
|*Query*|*terms[0].termType*\\ \\ _可选_|| ||string|
|*Query*|*terms[0].type*\\ \\ _可选_|| ||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_|| ||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«object»»|#b067bd9552e787aea006c9b1cd6fcd02]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/operation/string
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ "object" ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 动态修改 {anchor:updateusingput}
{noformat}
PUT /dynamic/form/operation/{formId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*formId*\\ \\ _必填_||formId||string|
|*Body*|*paramEntity*\\ \\ _必填_||paramEntity||[UpdateParamEntity«Map«string,object»»|#eba3e5ef973206080b3fe0cfe29971bc]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/operation/string
{code}


h6. 请求 body
{code:language=json}
{
  "data" : "object",
  "excludes" : [ "string" ],
  "includes" : [ "string" ],
  "terms" : [ {
    "column" : "string",
    "termType" : "string",
    "terms" : [ {
      "column" : "string",
      "termType" : "string",
      "terms" : [ "..." ],
      "type" : "string",
      "value" : "object"
    } ],
    "type" : "string",
    "value" : "object"
  } ]
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 动态删除 {anchor:deleteusingdelete_1}
{noformat}
DELETE /dynamic/form/operation/{formId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*formId*\\ \\ _必填_||formId||string|
|*Query*|*excludes*\\ \\ _可选_|| ||< string > array(multi)|
|*Query*|*includes*\\ \\ _可选_|| ||< string > array(multi)|
|*Query*|*terms[0].column*\\ \\ _可选_|| ||string|
|*Query*|*terms[0].termType*\\ \\ _可选_|| ||string|
|*Query*|*terms[0].type*\\ \\ _可选_|| ||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_|| ||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/operation/string
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "includes" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 动态表单-表单管理 {anchor:259f10c12785f43477afbdfbc9bf50b7}
Dynamic Form Column Controller


h4. 新增 {anchor:addusingpost_3}
{noformat}
POST /dynamic/form
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[DynamicFormEntity|#dynamicformentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form
{code}


h6. 请求 body
{code:language=json}
{
  "alias" : "testForm",
  "correlations" : "string",
  "createTime" : 0,
  "creatorId" : "1",
  "dataSourceId" : "string",
  "databaseTableName" : "f_test_form",
  "deployed" : false,
  "describe" : "string",
  "id" : "string",
  "name" : "测试表单",
  "properties" : "object",
  "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
  "type" : "string",
  "updateTime" : 0,
  "version" : 1
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_3}
{noformat}
GET /dynamic/form
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«DynamicFormEntity»»|#79912e82f1deb6279e26d7fd6a3b5046]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "alias" : "testForm",
      "correlations" : "string",
      "createTime" : 0,
      "creatorId" : "1",
      "dataSourceId" : "string",
      "databaseTableName" : "f_test_form",
      "deployed" : false,
      "describe" : "string",
      "id" : "string",
      "name" : "测试表单",
      "properties" : "object",
      "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
      "type" : "string",
      "updateTime" : 0,
      "version" : 1
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_3}
{noformat}
PATCH /dynamic/form
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[DynamicFormEntity|#dynamicformentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form
{code}


h6. 请求 body
{code:language=json}
{
  "alias" : "testForm",
  "correlations" : "string",
  "createTime" : 0,
  "creatorId" : "1",
  "dataSourceId" : "string",
  "databaseTableName" : "f_test_form",
  "deployed" : false,
  "describe" : "string",
  "id" : "string",
  "name" : "测试表单",
  "properties" : "object",
  "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
  "type" : "string",
  "updateTime" : 0,
  "version" : 1
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 同时保存表单和字段 {anchor:saveorupdateformandcolumnusingpatch}
{noformat}
PATCH /dynamic/form/bind
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*bindEntity*\\ \\ _必填_||bindEntity||[DynamicFormColumnBindEntity|#dynamicformcolumnbindentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/bind
{code}


h6. 请求 body
{code:language=json}
{
  "columns" : [ {
    "alias" : "string",
    "columnName" : "string",
    "dataType" : "string",
    "describe" : "string",
    "dictConfig" : "string",
    "dictId" : "string",
    "dictParserId" : "string",
    "formId" : "string",
    "id" : "string",
    "javaType" : "string",
    "jdbcType" : "string",
    "length" : 0,
    "name" : "string",
    "precision" : 0,
    "properties" : "object",
    "scale" : 0,
    "sortIndex" : 0
  } ],
  "form" : {
    "alias" : "testForm",
    "correlations" : "string",
    "createTime" : 0,
    "creatorId" : "1",
    "dataSourceId" : "string",
    "databaseTableName" : "f_test_form",
    "deployed" : false,
    "describe" : "string",
    "id" : "string",
    "name" : "测试表单",
    "properties" : "object",
    "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
    "type" : "string",
    "updateTime" : 0,
    "version" : 1
  }
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除列 {anchor:deleteusingdelete}
{noformat}
DELETE /dynamic/form/column
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _可选_||要删除的列id,多个列以,分割||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DynamicFormColumnEntity»»|#7db23ee003946511961f3a7df29c6d8d]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/column
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "alias" : "string",
    "columnName" : "string",
    "dataType" : "string",
    "describe" : "string",
    "dictConfig" : "string",
    "dictId" : "string",
    "dictParserId" : "string",
    "formId" : "string",
    "id" : "string",
    "javaType" : "string",
    "jdbcType" : "string",
    "length" : 0,
    "name" : "string",
    "precision" : 0,
    "properties" : "object",
    "scale" : 0,
    "sortIndex" : 0
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 保存表单列 {anchor:addusingpatch_1}
{noformat}
PATCH /dynamic/form/column
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*columnEntity*\\ \\ _必填_||columnEntity||[DynamicFormColumnEntity|#dynamicformcolumnentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/column
{code}


h6. 请求 body
{code:language=json}
{
  "alias" : "string",
  "columnName" : "string",
  "dataType" : "string",
  "describe" : "string",
  "dictConfig" : "string",
  "dictId" : "string",
  "dictParserId" : "string",
  "formId" : "string",
  "id" : "string",
  "javaType" : "string",
  "jdbcType" : "string",
  "length" : 0,
  "name" : "string",
  "precision" : 0,
  "properties" : "object",
  "scale" : 0,
  "sortIndex" : 0
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 保存多个表单列 {anchor:addusingpatch}
{noformat}
PATCH /dynamic/form/column/batch
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*columnEntities*\\ \\ _必填_||columnEntities||< [DynamicFormColumnEntity|#dynamicformcolumnentity] > array|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«string»»|#fc10708f9a97feca7dc9e38bed038c18]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/column/batch
{code}


h6. 请求 body
{code:language=json}
[ {
  "alias" : "string",
  "columnName" : "string",
  "dataType" : "string",
  "describe" : "string",
  "dictConfig" : "string",
  "dictId" : "string",
  "dictParserId" : "string",
  "formId" : "string",
  "id" : "string",
  "javaType" : "string",
  "jdbcType" : "string",
  "length" : 0,
  "name" : "string",
  "precision" : 0,
  "properties" : "object",
  "scale" : 0,
  "sortIndex" : 0
} ]
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ "string" ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取表单的所有列 {anchor:getbyformidusingget}
{noformat}
GET /dynamic/form/column/{formId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*formId*\\ \\ _必填_||formId||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DynamicFormColumnEntity»»|#7db23ee003946511961f3a7df29c6d8d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/column/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "alias" : "string",
    "columnName" : "string",
    "dataType" : "string",
    "describe" : "string",
    "dictConfig" : "string",
    "dictId" : "string",
    "dictParserId" : "string",
    "formId" : "string",
    "id" : "string",
    "javaType" : "string",
    "jdbcType" : "string",
    "length" : 0,
    "name" : "string",
    "precision" : 0,
    "properties" : "object",
    "scale" : 0,
    "sortIndex" : 0
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_3}
{noformat}
GET /dynamic/form/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_6}
{noformat}
GET /dynamic/form/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DynamicFormEntity»»|#26fa949c2addeecdfcd02861128889bd]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "alias" : "testForm",
    "correlations" : "string",
    "createTime" : 0,
    "creatorId" : "1",
    "dataSourceId" : "string",
    "databaseTableName" : "f_test_form",
    "deployed" : false,
    "describe" : "string",
    "id" : "string",
    "name" : "测试表单",
    "properties" : "object",
    "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
    "type" : "string",
    "updateTime" : 0,
    "version" : 1
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_3}
{noformat}
GET /dynamic/form/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DynamicFormEntity»»|#26fa949c2addeecdfcd02861128889bd]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "alias" : "testForm",
    "correlations" : "string",
    "createTime" : 0,
    "creatorId" : "1",
    "dataSourceId" : "string",
    "databaseTableName" : "f_test_form",
    "deployed" : false,
    "describe" : "string",
    "id" : "string",
    "name" : "测试表单",
    "properties" : "object",
    "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
    "type" : "string",
    "updateTime" : 0,
    "version" : 1
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_7}
{noformat}
GET /dynamic/form/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«DynamicFormEntity»|#3f6a79e1f3372ef93cbb9d8864461030]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "alias" : "testForm",
    "correlations" : "string",
    "createTime" : 0,
    "creatorId" : "1",
    "dataSourceId" : "string",
    "databaseTableName" : "f_test_form",
    "deployed" : false,
    "describe" : "string",
    "id" : "string",
    "name" : "测试表单",
    "properties" : "object",
    "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
    "type" : "string",
    "updateTime" : 0,
    "version" : 1
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_3}
{noformat}
PUT /dynamic/form/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[DynamicFormEntity|#dynamicformentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/string
{code}


h6. 请求 body
{code:language=json}
{
  "alias" : "testForm",
  "correlations" : "string",
  "createTime" : 0,
  "creatorId" : "1",
  "dataSourceId" : "string",
  "databaseTableName" : "f_test_form",
  "deployed" : false,
  "describe" : "string",
  "id" : "string",
  "name" : "测试表单",
  "properties" : "object",
  "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
  "type" : "string",
  "updateTime" : 0,
  "version" : 1
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_3}
{noformat}
DELETE /dynamic/form/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 发布表单 {anchor:deployusingput}
{noformat}
PUT /dynamic/form/{id}/deploy
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/string/deploy
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取当前正在编辑的表单 {anchor:geteditingusingget}
{noformat}
GET /dynamic/form/{id}/editing
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«DynamicFormColumnBindEntity»|#e7f4b98f55b7cb1bb5814471463d959a]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/string/editing
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "columns" : [ {
      "alias" : "string",
      "columnName" : "string",
      "dataType" : "string",
      "describe" : "string",
      "dictConfig" : "string",
      "dictId" : "string",
      "dictParserId" : "string",
      "formId" : "string",
      "id" : "string",
      "javaType" : "string",
      "jdbcType" : "string",
      "length" : 0,
      "name" : "string",
      "precision" : 0,
      "properties" : "object",
      "scale" : 0,
      "sortIndex" : 0
    } ],
    "form" : {
      "alias" : "testForm",
      "correlations" : "string",
      "createTime" : 0,
      "creatorId" : "1",
      "dataSourceId" : "string",
      "databaseTableName" : "f_test_form",
      "deployed" : false,
      "describe" : "string",
      "id" : "string",
      "name" : "测试表单",
      "properties" : "object",
      "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
      "type" : "string",
      "updateTime" : 0,
      "version" : 1
    }
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取最新发布的表单 {anchor:selectdeployedusingget}
{noformat}
GET /dynamic/form/{id}/latest
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«DynamicFormColumnBindEntity»|#e7f4b98f55b7cb1bb5814471463d959a]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/string/latest
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "columns" : [ {
      "alias" : "string",
      "columnName" : "string",
      "dataType" : "string",
      "describe" : "string",
      "dictConfig" : "string",
      "dictId" : "string",
      "dictParserId" : "string",
      "formId" : "string",
      "id" : "string",
      "javaType" : "string",
      "jdbcType" : "string",
      "length" : 0,
      "name" : "string",
      "precision" : 0,
      "properties" : "object",
      "scale" : 0,
      "sortIndex" : 0
    } ],
    "form" : {
      "alias" : "testForm",
      "correlations" : "string",
      "createTime" : 0,
      "creatorId" : "1",
      "dataSourceId" : "string",
      "databaseTableName" : "f_test_form",
      "deployed" : false,
      "describe" : "string",
      "id" : "string",
      "name" : "测试表单",
      "properties" : "object",
      "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
      "type" : "string",
      "updateTime" : 0,
      "version" : 1
    }
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 取消发布表单 {anchor:undeployusingput}
{noformat}
PUT /dynamic/form/{id}/un-deploy
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/string/un-deploy
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取指定版本的表单 {anchor:selectdeployedusingget_1}
{noformat}
GET /dynamic/form/{id}/{version}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Path*|*version*\\ \\ _必填_||version||integer (int32)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«DynamicFormColumnBindEntity»|#e7f4b98f55b7cb1bb5814471463d959a]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/dynamic/form/string/0
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "columns" : [ {
      "alias" : "string",
      "columnName" : "string",
      "dataType" : "string",
      "describe" : "string",
      "dictConfig" : "string",
      "dictId" : "string",
      "dictParserId" : "string",
      "formId" : "string",
      "id" : "string",
      "javaType" : "string",
      "jdbcType" : "string",
      "length" : 0,
      "name" : "string",
      "precision" : 0,
      "properties" : "object",
      "scale" : 0,
      "sortIndex" : 0
    } ],
    "form" : {
      "alias" : "testForm",
      "correlations" : "string",
      "createTime" : 0,
      "creatorId" : "1",
      "dataSourceId" : "string",
      "databaseTableName" : "f_test_form",
      "deployed" : false,
      "describe" : "string",
      "id" : "string",
      "name" : "测试表单",
      "properties" : "object",
      "triggers" : "[{\"language\":\"groovy\",\"script\":\" return true;\"}]",
      "type" : "string",
      "updateTime" : 0,
      "version" : 1
    }
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 定时调度管理 {anchor:d9f055d9ba20d4f8e559c4140bb9367e}
Schedule Job Controller


h4. 新增 {anchor:addusingpost_14}
{noformat}
POST /schedule/job
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[ScheduleJobEntity|#schedulejobentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "language" : "string",
  "name" : "string",
  "parameters" : "string",
  "properties" : "object",
  "quartzConfig" : "string",
  "remark" : "string",
  "script" : "string",
  "status" : "string",
  "tags" : "string",
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_16}
{noformat}
GET /schedule/job
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«ScheduleJobEntity»»|#42906958f8fba064d74cc15b287b285b]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "id" : "string",
      "language" : "string",
      "name" : "string",
      "parameters" : "string",
      "properties" : "object",
      "quartzConfig" : "string",
      "remark" : "string",
      "script" : "string",
      "status" : "string",
      "tags" : "string",
      "type" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_14}
{noformat}
PATCH /schedule/job
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[ScheduleJobEntity|#schedulejobentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "language" : "string",
  "name" : "string",
  "parameters" : "string",
  "properties" : "object",
  "quartzConfig" : "string",
  "remark" : "string",
  "script" : "string",
  "status" : "string",
  "tags" : "string",
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_16}
{noformat}
GET /schedule/job/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_32}
{noformat}
GET /schedule/job/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«ScheduleJobEntity»»|#f93b73ff5f600449b044cf276a20c95d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "id" : "string",
    "language" : "string",
    "name" : "string",
    "parameters" : "string",
    "properties" : "object",
    "quartzConfig" : "string",
    "remark" : "string",
    "script" : "string",
    "status" : "string",
    "tags" : "string",
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_16}
{noformat}
GET /schedule/job/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«ScheduleJobEntity»»|#f93b73ff5f600449b044cf276a20c95d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "id" : "string",
    "language" : "string",
    "name" : "string",
    "parameters" : "string",
    "properties" : "object",
    "quartzConfig" : "string",
    "remark" : "string",
    "script" : "string",
    "status" : "string",
    "tags" : "string",
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_33}
{noformat}
GET /schedule/job/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«ScheduleJobEntity»|#d803770b9be33fab88c050cc650ebacd]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "id" : "string",
    "language" : "string",
    "name" : "string",
    "parameters" : "string",
    "properties" : "object",
    "quartzConfig" : "string",
    "remark" : "string",
    "script" : "string",
    "status" : "string",
    "tags" : "string",
    "type" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_13}
{noformat}
PUT /schedule/job/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[ScheduleJobEntity|#schedulejobentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job/string
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "language" : "string",
  "name" : "string",
  "parameters" : "string",
  "properties" : "object",
  "quartzConfig" : "string",
  "remark" : "string",
  "script" : "string",
  "status" : "string",
  "tags" : "string",
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_13}
{noformat}
DELETE /schedule/job/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 禁用任务 {anchor:disableusingput_3}
{noformat}
PUT /schedule/job/{id}/disable
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job/string/disable
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 启用任务 {anchor:enableusingput_3}
{noformat}
PUT /schedule/job/{id}/enable
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job/string/enable
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 执行任务 {anchor:executeusingpost_2}
{noformat}
POST /schedule/job/{id}/execute
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*args*\\ \\ _必填_||args||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«object»|#4e3465260d0b339c0ae101c8a6821732]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/schedule/job/string/execute
{code}


h6. 请求 body
{code:language=json}
{ }
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 开发人员工具-数据库维护 {anchor:0f1375eedfcc7ee807705306a3937de6}
Data Base Manager Controller


h4. 执行SQL {anchor:executeusingpost_1}
{noformat}
POST /database/manager/execute
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*sqlLines*\\ \\ _可选_||SQL脚本||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«SqlExecuteResult»»|#ccb3581f1a83df607e130bbc2cc8649a]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}text/plain{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/database/manager/execute
{code}


h6. 请求 body
{code:language=json}
{ }
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "result" : "object",
    "sqlInfo" : {
      "datasourceId" : "string",
      "sql" : "string",
      "type" : "string"
    }
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 指定数据源执行SQL {anchor:executeusingpost}
{noformat}
POST /database/manager/execute/{datasourceId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*datasourceId*\\ \\ _可选_||数据源ID||string|
|*Body*|*sqlLines*\\ \\ _可选_||SQL脚本||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«SqlExecuteResult»»|#ccb3581f1a83df607e130bbc2cc8649a]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}text/plain{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/database/manager/execute/string
{code}


h6. 请求 body
{code:language=json}
{ }
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "result" : "object",
    "sqlInfo" : {
      "datasourceId" : "string",
      "sql" : "string",
      "type" : "string"
    }
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取数据库元数据 {anchor:parseallobjectusingget_1}
{noformat}
GET /database/manager/metas
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Map«string,List«ObjectMetadata»»»|#b457b349a06a33514d97f779d275a74f]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/database/manager/metas
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "string" : [ "[#objectmetadata]" ]
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取指定数据源的元数据 {anchor:parseallobjectusingget}
{noformat}
GET /database/manager/metas/{datasourceId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*datasourceId*\\ \\ _可选_||数据源ID||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Map«string,List«ObjectMetadata»»»|#b457b349a06a33514d97f779d275a74f]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/database/manager/metas/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "string" : [ "[#objectmetadata]" ]
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取全部事务信息 {anchor:alltransactionusingget}
{noformat}
GET /database/manager/transactional
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«TransactionInfo»»|#9e1189b7efd061306fec6127a959452d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/database/manager/transactional
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "createTime" : "string",
    "id" : "string",
    "lastExecuteTime" : "string",
    "sqlHistory" : [ {
      "datasourceId" : "string",
      "sql" : "string",
      "type" : "string"
    } ]
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 开启事务执行SQL {anchor:executetransactionalusingpost}
{noformat}
POST /database/manager/transactional/execute/{transactionalId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*transactionalId*\\ \\ _可选_||事务ID||string|
|*Body*|*sqlLines*\\ \\ _可选_||SQL脚本||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«SqlExecuteResult»»|#ccb3581f1a83df607e130bbc2cc8649a]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}text/plain{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/database/manager/transactional/execute/string
{code}


h6. 请求 body
{code:language=json}
{ }
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "result" : "object",
    "sqlInfo" : {
      "datasourceId" : "string",
      "sql" : "string",
      "type" : "string"
    }
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新建事务 {anchor:newtransactionusingget}
{noformat}
GET /database/manager/transactional/new
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/database/manager/transactional/new
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 提交事务 {anchor:committransactionusingpost}
{noformat}
POST /database/manager/transactional/{id}/commit
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/database/manager/transactional/string/commit
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 回滚事务 {anchor:rollbacktransactionusingpost}
{noformat}
POST /database/manager/transactional/{id}/rollback
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/database/manager/transactional/string/rollback
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 开发人员工具-数据源 {anchor:85a3461fd0c0a359ccdc3224413e55bd}
Datasource Controller


h4. 获取全部数据源信息 {anchor:getallconfigusingget}
{noformat}
GET /datasource
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DynamicDataSourceConfig»»|#b5a7cbe033a2131fc198f225ddd71b9d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/datasource
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "describe" : "string",
    "id" : "string",
    "name" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 文件管理-文件信息管理 {anchor:f88efb1c5e76d4375a9aeeeadb01be2e}
File Info Controller


h4. 根据动态条件查询 {anchor:listusingget_5}
{noformat}
GET /file-info
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«FileInfoEntity»»|#514595c8dda5f56bb0f5c31d0b5c3214]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file-info
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "classified" : "string",
      "createTime" : 0,
      "creatorId" : "string",
      "id" : "string",
      "location" : "string",
      "md5" : "string",
      "name" : "string",
      "properties" : "object",
      "size" : 0,
      "status" : "string",
      "type" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_5}
{noformat}
GET /file-info/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file-info/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_10}
{noformat}
GET /file-info/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«FileInfoEntity»»|#ec6dc31ad20662480c1d124b03ac7a8d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file-info/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "classified" : "string",
    "createTime" : 0,
    "creatorId" : "string",
    "id" : "string",
    "location" : "string",
    "md5" : "string",
    "name" : "string",
    "properties" : "object",
    "size" : 0,
    "status" : "string",
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_5}
{noformat}
GET /file-info/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«FileInfoEntity»»|#ec6dc31ad20662480c1d124b03ac7a8d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file-info/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "classified" : "string",
    "createTime" : 0,
    "creatorId" : "string",
    "id" : "string",
    "location" : "string",
    "md5" : "string",
    "name" : "string",
    "properties" : "object",
    "size" : 0,
    "status" : "string",
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_11}
{noformat}
GET /file-info/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«FileInfoEntity»|#dccd344201bca930cbb01c5576401ddd]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file-info/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "classified" : "string",
    "createTime" : 0,
    "creatorId" : "string",
    "id" : "string",
    "location" : "string",
    "md5" : "string",
    "name" : "string",
    "properties" : "object",
    "size" : 0,
    "status" : "string",
    "type" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 文件管理-文件操作 {anchor:d8694918e985edbb7528a294fd9be3c2}
File Controller


h4. 构建文本文件并下载 {anchor:downloadtxtusingpost}
{noformat}
POST /file/download-text/{name}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*name*\\ \\ _可选_||文件名||string|
|*Query*|*text*\\ \\ _可选_||文本内容||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||无内容|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file/download-text/string
{code}


h6. 请求 query
{code:language=json}
{
  "text" : "string"
}
{code}


h4. 构建文本文件并下载 {anchor:downloadtxtusingget}
{noformat}
GET /file/download-text/{name}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*name*\\ \\ _可选_||文件名||string|
|*Query*|*text*\\ \\ _可选_||文本内容||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file/download-text/string
{code}


h6. 请求 query
{code:language=json}
{
  "text" : "string"
}
{code}


h4. 构建zip文件并下载 {anchor:downloadzipusingpost}
{noformat}
POST /file/download-zip/{name}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*name*\\ \\ _可选_||zip文件名||string|
|*Query*|*data*\\ \\ _可选_||zip文件内容||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||无内容|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file/download-zip/string
{code}


h6. 请求 query
{code:language=json}
{
  "data" : "string"
}
{code}


h4. 下载文件 {anchor:downloadusingget}
{noformat}
GET /file/download/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _可选_||文件的id或者md5||string|
|*Query*|*name*\\ \\ _可选_||文件名,如果未指定,默认为上传时的文件名||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file/download/string
{code}


h6. 请求 query
{code:language=json}
{
  "name" : "string"
}
{code}


h4. 指定文件名下载文件 {anchor:restdownloadusingget}
{noformat}
GET /file/download/{id}/{name}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _可选_||文件的id或者md5||string|
|*Path*|*name*\\ \\ _可选_||文件名||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file/download/string/string
{code}


h4. 根据MD5获取文件信息 {anchor:uploadstaticusingget}
{noformat}
GET /file/md5/{md5}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*md5*\\ \\ _必填_||md5||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«FileInfoEntity»|#dccd344201bca930cbb01c5576401ddd]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file/md5/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "classified" : "string",
    "createTime" : 0,
    "creatorId" : "string",
    "id" : "string",
    "location" : "string",
    "md5" : "string",
    "name" : "string",
    "properties" : "object",
    "size" : 0,
    "status" : "string",
    "type" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. upload {anchor:uploadusingpost_1}
{noformat}
POST /file/upload
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*FormData*|*file*\\ \\ _必填_||file||file|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«FileInfoEntity»|#dccd344201bca930cbb01c5576401ddd]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}multipart/form-data{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file/upload
{code}


h6. 请求 formData
{code:language=json}
"file"
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "classified" : "string",
    "createTime" : 0,
    "creatorId" : "string",
    "id" : "string",
    "location" : "string",
    "md5" : "string",
    "name" : "string",
    "properties" : "object",
    "size" : 0,
    "status" : "string",
    "type" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 上传多个文件 {anchor:uploadusingpost}
{noformat}
POST /file/upload-multi
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*FormData*|*files*\\ \\ _必填_||files||< file > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«FileInfoEntity»»|#ec6dc31ad20662480c1d124b03ac7a8d]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file/upload-multi
{code}


h6. 请求 formData
{code:language=json}
"file"
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "classified" : "string",
    "createTime" : 0,
    "creatorId" : "string",
    "id" : "string",
    "location" : "string",
    "md5" : "string",
    "name" : "string",
    "properties" : "object",
    "size" : 0,
    "status" : "string",
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 上传静态文件 {anchor:uploadstaticusingpost}
{noformat}
POST /file/upload-static
{noformat}


h5. 说明
上传后响应结果的result字段为文件的访问地址


h5. 参数

||类型||名称||说明||类型||
|*FormData*|*file*\\ \\ _必填_||file||file|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}multipart/form-data{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/file/upload-static
{code}


h6. 请求 formData
{code:language=json}
"file"
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 权限-权限管理 {anchor:99d019505bdec5f0453ce84c0a79dd13}
Permission Controller


h4. 新增 {anchor:addusingpost_8}
{noformat}
POST /permission
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[PermissionEntity|#permissionentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/permission
{code}


h6. 请求 body
{code:language=json}
{
  "actions" : [ {
    "action" : "string",
    "defaultCheck" : true,
    "describe" : "string"
  } ],
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "optionalFields" : [ {
    "describe" : "string",
    "name" : "string"
  } ],
  "parents" : [ {
    "actions" : [ "string" ],
    "permission" : "string"
  } ],
  "properties" : "object",
  "status" : "string",
  "supportDataAccessTypes" : [ "string" ],
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_10}
{noformat}
GET /permission
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«PermissionEntity»»|#f0740da5a603024d54cffe67ebcfe2f3]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/permission
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "actions" : [ {
        "action" : "string",
        "defaultCheck" : true,
        "describe" : "string"
      } ],
      "describe" : "string",
      "id" : "string",
      "name" : "string",
      "optionalFields" : [ {
        "describe" : "string",
        "name" : "string"
      } ],
      "parents" : [ {
        "actions" : [ "string" ],
        "permission" : "string"
      } ],
      "properties" : "object",
      "status" : "string",
      "supportDataAccessTypes" : [ "string" ],
      "type" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_8}
{noformat}
PATCH /permission
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[PermissionEntity|#permissionentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/permission
{code}


h6. 请求 body
{code:language=json}
{
  "actions" : [ {
    "action" : "string",
    "defaultCheck" : true,
    "describe" : "string"
  } ],
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "optionalFields" : [ {
    "describe" : "string",
    "name" : "string"
  } ],
  "parents" : [ {
    "actions" : [ "string" ],
    "permission" : "string"
  } ],
  "properties" : "object",
  "status" : "string",
  "supportDataAccessTypes" : [ "string" ],
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_10}
{noformat}
GET /permission/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/permission/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_20}
{noformat}
GET /permission/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«PermissionEntity»»|#f416115c1aec36913d87bd83aa6b2323]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/permission/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "actions" : [ {
      "action" : "string",
      "defaultCheck" : true,
      "describe" : "string"
    } ],
    "describe" : "string",
    "id" : "string",
    "name" : "string",
    "optionalFields" : [ {
      "describe" : "string",
      "name" : "string"
    } ],
    "parents" : [ {
      "actions" : [ "string" ],
      "permission" : "string"
    } ],
    "properties" : "object",
    "status" : "string",
    "supportDataAccessTypes" : [ "string" ],
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_10}
{noformat}
GET /permission/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«PermissionEntity»»|#f416115c1aec36913d87bd83aa6b2323]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/permission/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "actions" : [ {
      "action" : "string",
      "defaultCheck" : true,
      "describe" : "string"
    } ],
    "describe" : "string",
    "id" : "string",
    "name" : "string",
    "optionalFields" : [ {
      "describe" : "string",
      "name" : "string"
    } ],
    "parents" : [ {
      "actions" : [ "string" ],
      "permission" : "string"
    } ],
    "properties" : "object",
    "status" : "string",
    "supportDataAccessTypes" : [ "string" ],
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_21}
{noformat}
GET /permission/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PermissionEntity»|#50819844bfd86a245c543cc0190b4828]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/permission/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "actions" : [ {
      "action" : "string",
      "defaultCheck" : true,
      "describe" : "string"
    } ],
    "describe" : "string",
    "id" : "string",
    "name" : "string",
    "optionalFields" : [ {
      "describe" : "string",
      "name" : "string"
    } ],
    "parents" : [ {
      "actions" : [ "string" ],
      "permission" : "string"
    } ],
    "properties" : "object",
    "status" : "string",
    "supportDataAccessTypes" : [ "string" ],
    "type" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_7}
{noformat}
PUT /permission/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[PermissionEntity|#permissionentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/permission/string
{code}


h6. 请求 body
{code:language=json}
{
  "actions" : [ {
    "action" : "string",
    "defaultCheck" : true,
    "describe" : "string"
  } ],
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "optionalFields" : [ {
    "describe" : "string",
    "name" : "string"
  } ],
  "parents" : [ {
    "actions" : [ "string" ],
    "permission" : "string"
  } ],
  "properties" : "object",
  "status" : "string",
  "supportDataAccessTypes" : [ "string" ],
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_7}
{noformat}
DELETE /permission/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/permission/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 权限-权限设置 {anchor:7710bd3a3edcf4b588e074f9df35af74}
Authorization Setting Controller


h4. 新增 {anchor:addusingpost}
{noformat}
POST /autz-setting
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[AuthorizationSettingEntity|#authorizationsettingentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting
{code}


h6. 请求 body
{code:language=json}
{
  "describe" : "string",
  "details" : [ {
    "actions" : [ "string" ],
    "dataAccesses" : [ {
      "action" : "string",
      "config" : "string",
      "describe" : "string",
      "type" : "string"
    } ],
    "id" : "string",
    "merge" : true,
    "permissionId" : "string",
    "priority" : 0,
    "properties" : "object",
    "settingId" : "string",
    "status" : "string"
  } ],
  "id" : "string",
  "menus" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "config" : "string",
      "id" : "string",
      "level" : 0,
      "menuId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "settingId" : "string",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "config" : "string",
    "id" : "string",
    "level" : 0,
    "menuId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "settingId" : "string",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "properties" : "object",
  "settingFor" : "string",
  "status" : "string",
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget}
{noformat}
GET /autz-setting
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«AuthorizationSettingEntity»»|#ab7d3745d6ceba77fc00d0bdf50dbd14]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "describe" : "string",
      "details" : [ {
        "actions" : [ "string" ],
        "dataAccesses" : [ {
          "action" : "string",
          "config" : "string",
          "describe" : "string",
          "type" : "string"
        } ],
        "id" : "string",
        "merge" : true,
        "permissionId" : "string",
        "priority" : 0,
        "properties" : "object",
        "settingId" : "string",
        "status" : "string"
      } ],
      "id" : "string",
      "menus" : [ {
        "children" : [ {
          "children" : [ "..." ],
          "config" : "string",
          "id" : "string",
          "level" : 0,
          "menuId" : "string",
          "parentId" : "string",
          "path" : "string",
          "properties" : "object",
          "settingId" : "string",
          "sortIndex" : 0,
          "status" : "string"
        } ],
        "config" : "string",
        "id" : "string",
        "level" : 0,
        "menuId" : "string",
        "parentId" : "string",
        "path" : "string",
        "properties" : "object",
        "settingId" : "string",
        "sortIndex" : 0,
        "status" : "string"
      } ],
      "properties" : "object",
      "settingFor" : "string",
      "status" : "string",
      "type" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch}
{noformat}
PATCH /autz-setting
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[AuthorizationSettingEntity|#authorizationsettingentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting
{code}


h6. 请求 body
{code:language=json}
{
  "describe" : "string",
  "details" : [ {
    "actions" : [ "string" ],
    "dataAccesses" : [ {
      "action" : "string",
      "config" : "string",
      "describe" : "string",
      "type" : "string"
    } ],
    "id" : "string",
    "merge" : true,
    "permissionId" : "string",
    "priority" : 0,
    "properties" : "object",
    "settingId" : "string",
    "status" : "string"
  } ],
  "id" : "string",
  "menus" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "config" : "string",
      "id" : "string",
      "level" : 0,
      "menuId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "settingId" : "string",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "config" : "string",
    "id" : "string",
    "level" : 0,
    "menuId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "settingId" : "string",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "properties" : "object",
  "settingFor" : "string",
  "status" : "string",
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget}
{noformat}
GET /autz-setting/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget}
{noformat}
GET /autz-setting/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«AuthorizationSettingEntity»»|#212938092e05225001462abfc2af0b7f]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "describe" : "string",
    "details" : [ {
      "actions" : [ "string" ],
      "dataAccesses" : [ {
        "action" : "string",
        "config" : "string",
        "describe" : "string",
        "type" : "string"
      } ],
      "id" : "string",
      "merge" : true,
      "permissionId" : "string",
      "priority" : 0,
      "properties" : "object",
      "settingId" : "string",
      "status" : "string"
    } ],
    "id" : "string",
    "menus" : [ {
      "children" : [ {
        "children" : [ "..." ],
        "config" : "string",
        "id" : "string",
        "level" : 0,
        "menuId" : "string",
        "parentId" : "string",
        "path" : "string",
        "properties" : "object",
        "settingId" : "string",
        "sortIndex" : 0,
        "status" : "string"
      } ],
      "config" : "string",
      "id" : "string",
      "level" : 0,
      "menuId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "settingId" : "string",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "properties" : "object",
    "settingFor" : "string",
    "status" : "string",
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget}
{noformat}
GET /autz-setting/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«AuthorizationSettingEntity»»|#212938092e05225001462abfc2af0b7f]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "describe" : "string",
    "details" : [ {
      "actions" : [ "string" ],
      "dataAccesses" : [ {
        "action" : "string",
        "config" : "string",
        "describe" : "string",
        "type" : "string"
      } ],
      "id" : "string",
      "merge" : true,
      "permissionId" : "string",
      "priority" : 0,
      "properties" : "object",
      "settingId" : "string",
      "status" : "string"
    } ],
    "id" : "string",
    "menus" : [ {
      "children" : [ {
        "children" : [ "..." ],
        "config" : "string",
        "id" : "string",
        "level" : 0,
        "menuId" : "string",
        "parentId" : "string",
        "path" : "string",
        "properties" : "object",
        "settingId" : "string",
        "sortIndex" : 0,
        "status" : "string"
      } ],
      "config" : "string",
      "id" : "string",
      "level" : 0,
      "menuId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "settingId" : "string",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "properties" : "object",
    "settingFor" : "string",
    "status" : "string",
    "type" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_1}
{noformat}
GET /autz-setting/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«AuthorizationSettingEntity»|#c2f4413fddae73a407b1566ae2880d25]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "describe" : "string",
    "details" : [ {
      "actions" : [ "string" ],
      "dataAccesses" : [ {
        "action" : "string",
        "config" : "string",
        "describe" : "string",
        "type" : "string"
      } ],
      "id" : "string",
      "merge" : true,
      "permissionId" : "string",
      "priority" : 0,
      "properties" : "object",
      "settingId" : "string",
      "status" : "string"
    } ],
    "id" : "string",
    "menus" : [ {
      "children" : [ {
        "children" : [ "..." ],
        "config" : "string",
        "id" : "string",
        "level" : 0,
        "menuId" : "string",
        "parentId" : "string",
        "path" : "string",
        "properties" : "object",
        "settingId" : "string",
        "sortIndex" : 0,
        "status" : "string"
      } ],
      "config" : "string",
      "id" : "string",
      "level" : 0,
      "menuId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "settingId" : "string",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "properties" : "object",
    "settingFor" : "string",
    "status" : "string",
    "type" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput}
{noformat}
PUT /autz-setting/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[AuthorizationSettingEntity|#authorizationsettingentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting/string
{code}


h6. 请求 body
{code:language=json}
{
  "describe" : "string",
  "details" : [ {
    "actions" : [ "string" ],
    "dataAccesses" : [ {
      "action" : "string",
      "config" : "string",
      "describe" : "string",
      "type" : "string"
    } ],
    "id" : "string",
    "merge" : true,
    "permissionId" : "string",
    "priority" : 0,
    "properties" : "object",
    "settingId" : "string",
    "status" : "string"
  } ],
  "id" : "string",
  "menus" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "config" : "string",
      "id" : "string",
      "level" : 0,
      "menuId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "settingId" : "string",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "config" : "string",
    "id" : "string",
    "level" : 0,
    "menuId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "settingId" : "string",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "properties" : "object",
  "settingFor" : "string",
  "status" : "string",
  "type" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete}
{noformat}
DELETE /autz-setting/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据type和settingFor获取配置 {anchor:selectusingget}
{noformat}
GET /autz-setting/{type}/{settingFor}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*settingFor*\\ \\ _必填_||settingFor||string|
|*Path*|*type*\\ \\ _必填_||type||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«AuthorizationSettingEntity»|#c2f4413fddae73a407b1566ae2880d25]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/autz-setting/string/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "describe" : "string",
    "details" : [ {
      "actions" : [ "string" ],
      "dataAccesses" : [ {
        "action" : "string",
        "config" : "string",
        "describe" : "string",
        "type" : "string"
      } ],
      "id" : "string",
      "merge" : true,
      "permissionId" : "string",
      "priority" : 0,
      "properties" : "object",
      "settingId" : "string",
      "status" : "string"
    } ],
    "id" : "string",
    "menus" : [ {
      "children" : [ {
        "children" : [ "..." ],
        "config" : "string",
        "id" : "string",
        "level" : 0,
        "menuId" : "string",
        "parentId" : "string",
        "path" : "string",
        "properties" : "object",
        "settingId" : "string",
        "sortIndex" : 0,
        "status" : "string"
      } ],
      "config" : "string",
      "id" : "string",
      "level" : 0,
      "menuId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "settingId" : "string",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "properties" : "object",
    "settingFor" : "string",
    "status" : "string",
    "type" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 权限-用户令牌管理 {anchor:62b7b546918b2c3df3d9b35a4b697ff2}
User Token Info Controller


h4. 检查所有已过期的token并移除 {anchor:checkexpiredtokenusingput}
{noformat}
PUT /user-token/check
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-token/check
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 重置当前用户的令牌 {anchor:resettokenusingget}
{noformat}
GET /user-token/reset
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«boolean»|#bbdc11e8c14b5b13fda321a82dc3a3ac]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-token/reset
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : false,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取所有令牌 {anchor:alltokeninfousingget}
{noformat}
GET /user-token/token/all
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«UserToken»»|#3a9a2f2c4c0680c5729862f4845492b2]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-token/token/all
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "effective" : true,
    "expired" : true,
    "lastRequestTime" : 0,
    "maxInactiveInterval" : 0,
    "offline" : true,
    "requestTimes" : 0,
    "signInTime" : 0,
    "state" : "string",
    "token" : "string",
    "type" : "string",
    "userId" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取已授权令牌的总数 {anchor:alllogintokenusingget}
{noformat}
GET /user-token/token/total
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«long»|#f505e3d79e9444eeb3266210d702f335]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-token/token/total
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改令牌状态 {anchor:changetokenstateusingput}
{noformat}
PUT /user-token/token/{token}/{state}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*state*\\ \\ _可选_||要修改的状态||enum (effective, deny, expired, offline)|
|*Path*|*token*\\ \\ _可选_||令牌||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-token/token/string/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取已授权用户的总数 {anchor:allusertokenusingget}
{noformat}
GET /user-token/user/total
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«long»|#f505e3d79e9444eeb3266210d702f335]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-token/user/total
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改用户状态 {anchor:changeuserstateusingput}
{noformat}
PUT /user-token/user/{userId}/{state}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*state*\\ \\ _可选_||要修改的状态||enum (effective, deny, expired, offline)|
|*Path*|*userId*\\ \\ _可选_||用户ID||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-token/user/string/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 权限-用户授权 {anchor:4a8f6946d12957abbcdde9d31e2b28da}
Authorization Controller


h4. 退出当前登录 {anchor:exitusingget}
{noformat}
GET /authorize/exit
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage|#responsemessage]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/authorize/exit
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 用户名密码登录 {anchor:authorizeusingpost}
{noformat}
POST /authorize/login
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*password*\\ \\ _可选_||密码||string|
|*Query*|*username*\\ \\ _可选_||用户名||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Map«string,object»»|#06af4f2009dab634c08e24b8b0f26c2c]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/authorize/login
{code}


h6. 请求 query
{code:language=json}
{
  "password" : "string",
  "username" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 退出当前登录 {anchor:exitusingget_1}
{noformat}
GET /authorize/login-out
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage|#responsemessage]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/authorize/login-out
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 当前登录用户权限信息 {anchor:meusingget}
{noformat}
GET /authorize/me
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Authentication»|#91e04724f2ad858185d5fc280d46daa4]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/authorize/me
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "attributes" : {
      "string" : "[#serializable]"
    },
    "permissions" : [ {
      "actions" : [ "string" ],
      "dataAccesses" : [ {
        "action" : "string",
        "type" : "string"
      } ],
      "id" : "string"
    } ],
    "roles" : [ {
      "id" : "string",
      "name" : "string"
    } ],
    "user" : {
      "id" : "string",
      "name" : "string",
      "type" : "string",
      "username" : "string"
    }
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 退出当前登录 {anchor:exitusingget_2}
{noformat}
GET /authorize/sign-out
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage|#responsemessage]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/authorize/sign-out
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 权限-用户管理 {anchor:801758d74f8ce869d9e105d990eb15d7}
User Controller


h4. 新增 {anchor:addusingpost_16}
{noformat}
POST /user
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[BindRoleUserEntity|#bindroleuserentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user
{code}


h6. 请求 body
{code:language=json}
{
  "createTime" : 0,
  "creatorId" : "string",
  "id" : "string",
  "name" : "string",
  "password" : "string",
  "properties" : "object",
  "roles" : [ "string" ],
  "salt" : "string",
  "status" : "string",
  "username" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_18}
{noformat}
GET /user
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«UserEntity»»|#022104f1b83fb14da490f0bad176c23f]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "createTime" : 0,
      "creatorId" : "string",
      "id" : "string",
      "name" : "string",
      "password" : "string",
      "properties" : "object",
      "salt" : "string",
      "status" : "string",
      "username" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_18}
{noformat}
GET /user/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_36}
{noformat}
GET /user/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«UserEntity»»|#7009b808a7062b09cd5057c748edf5ce]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "createTime" : 0,
    "creatorId" : "string",
    "id" : "string",
    "name" : "string",
    "password" : "string",
    "properties" : "object",
    "salt" : "string",
    "status" : "string",
    "username" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_18}
{noformat}
GET /user/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«UserEntity»»|#7009b808a7062b09cd5057c748edf5ce]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "createTime" : 0,
    "creatorId" : "string",
    "id" : "string",
    "name" : "string",
    "password" : "string",
    "properties" : "object",
    "salt" : "string",
    "status" : "string",
    "username" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改当前登录用户的密码 {anchor:updateloginuserpasswordusingput}
{noformat}
PUT /user/password
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*oldPassword*\\ \\ _必填_||oldPassword||string|
|*Query*|*password*\\ \\ _必填_||password||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user/password
{code}


h6. 请求 query
{code:language=json}
{
  "oldPassword" : "string",
  "password" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改指定用户的密码 {anchor:updatebypasswordprimarykeyusingput}
{noformat}
PUT /user/password/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Query*|*oldPassword*\\ \\ _必填_||oldPassword||string|
|*Query*|*password*\\ \\ _必填_||password||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user/password/string
{code}


h6. 请求 query
{code:language=json}
{
  "oldPassword" : "string",
  "password" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_37}
{noformat}
GET /user/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«UserEntity»|#26c05b8f050f76cd6252ff48bb3d92d3]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "createTime" : 0,
    "creatorId" : "string",
    "id" : "string",
    "name" : "string",
    "password" : "string",
    "properties" : "object",
    "salt" : "string",
    "status" : "string",
    "username" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据ID修改用户信息 {anchor:updatebyprimarykeyusingput_15}
{noformat}
PUT /user/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*userModel*\\ \\ _必填_||userModel||[BindRoleUserEntity|#bindroleuserentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user/string
{code}


h6. 请求 body
{code:language=json}
{
  "createTime" : 0,
  "creatorId" : "string",
  "id" : "string",
  "name" : "string",
  "password" : "string",
  "properties" : "object",
  "roles" : [ "string" ],
  "salt" : "string",
  "status" : "string",
  "username" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 禁用用户 {anchor:disableusingput_4}
{noformat}
PUT /user/{id}/disable
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«boolean»|#bbdc11e8c14b5b13fda321a82dc3a3ac]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user/string/disable
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : false,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 启用用户 {anchor:enableusingput_4}
{noformat}
PUT /user/{id}/enable
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«boolean»|#bbdc11e8c14b5b13fda321a82dc3a3ac]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user/string/enable
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : false,
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 权限-菜单管理 {anchor:f49f855bcf8e453de7a92fd90d6355f3}
Menu Controller


h4. 新增 {anchor:addusingpost_5}
{noformat}
POST /menu
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[MenuEntity|#menuentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "describe" : "string",
    "icon" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "permissionId" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string",
    "url" : "string"
  } ],
  "describe" : "string",
  "icon" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "permissionId" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string",
  "url" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_6}
{noformat}
GET /menu
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«MenuEntity»»|#988c76f931d9e2f2511502e7d7e19ce1]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "children" : [ {
        "children" : [ "..." ],
        "describe" : "string",
        "icon" : "string",
        "id" : "string",
        "level" : 0,
        "name" : "string",
        "parentId" : "string",
        "path" : "string",
        "permissionId" : "string",
        "properties" : "object",
        "sortIndex" : 0,
        "status" : "string",
        "url" : "string"
      } ],
      "describe" : "string",
      "icon" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "permissionId" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string",
      "url" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_4}
{noformat}
PATCH /menu
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[MenuEntity|#menuentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "describe" : "string",
    "icon" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "permissionId" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string",
    "url" : "string"
  } ],
  "describe" : "string",
  "icon" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "permissionId" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string",
  "url" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_6}
{noformat}
GET /menu/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_12}
{noformat}
GET /menu/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«MenuEntity»»|#ebcb301625271fb0be42fdd8ac1f9cd7]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "describe" : "string",
      "icon" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "permissionId" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string",
      "url" : "string"
    } ],
    "describe" : "string",
    "icon" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "permissionId" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string",
    "url" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_6}
{noformat}
GET /menu/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«MenuEntity»»|#ebcb301625271fb0be42fdd8ac1f9cd7]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "describe" : "string",
      "icon" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "permissionId" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string",
      "url" : "string"
    } ],
    "describe" : "string",
    "icon" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "permissionId" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string",
    "url" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取当前用户的菜单列表 {anchor:getusermenuaslistusingget}
{noformat}
GET /menu/user-own/list
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«UserMenuEntity»»|#1eddb0f64b7f488855f93d644b623abe]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu/user-own/list
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "describe" : "string",
      "icon" : "string",
      "id" : "string",
      "level" : 0,
      "menuId" : "string",
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "permissionId" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "url" : "string"
    } ],
    "describe" : "string",
    "icon" : "string",
    "id" : "string",
    "level" : 0,
    "menuId" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "permissionId" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "url" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取当前用户的菜单树 {anchor:getusermenuastreeusingget}
{noformat}
GET /menu/user-own/tree
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«UserMenuEntity»»|#1eddb0f64b7f488855f93d644b623abe]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu/user-own/tree
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "describe" : "string",
      "icon" : "string",
      "id" : "string",
      "level" : 0,
      "menuId" : "string",
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "permissionId" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "url" : "string"
    } ],
    "describe" : "string",
    "icon" : "string",
    "id" : "string",
    "level" : 0,
    "menuId" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "permissionId" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "url" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_13}
{noformat}
GET /menu/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«MenuEntity»|#70aebc08733114eb863389fdebbff05d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "children" : [ {
      "children" : [ "..." ],
      "describe" : "string",
      "icon" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "permissionId" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string",
      "url" : "string"
    } ],
    "describe" : "string",
    "icon" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "permissionId" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string",
    "url" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_4}
{noformat}
PUT /menu/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[MenuEntity|#menuentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu/string
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "describe" : "string",
    "icon" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "permissionId" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string",
    "url" : "string"
  } ],
  "describe" : "string",
  "icon" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "permissionId" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string",
  "url" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_4}
{noformat}
DELETE /menu/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/menu/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 权限-角色管理 {anchor:e02058ecfcf00fb41780953cc88777e5}
Role Controller


h4. 新增 {anchor:addusingpost_13}
{noformat}
POST /role
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[RoleEntity|#roleentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role
{code}


h6. 请求 body
{code:language=json}
{
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "properties" : "object",
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_15}
{noformat}
GET /role
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«RoleEntity»»|#04b8a0105cc98da475754a7a0d118cac]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "describe" : "string",
      "id" : "string",
      "name" : "string",
      "properties" : "object",
      "status" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_13}
{noformat}
PATCH /role
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[RoleEntity|#roleentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role
{code}


h6. 请求 body
{code:language=json}
{
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "properties" : "object",
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_15}
{noformat}
GET /role/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 禁用角色 {anchor:disableusingput_2}
{noformat}
PUT /role/disable/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage|#responsemessage]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role/disable/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 启用角色 {anchor:enableusingput_2}
{noformat}
PUT /role/enable/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage|#responsemessage]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role/enable/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "object",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_30}
{noformat}
GET /role/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«RoleEntity»»|#6470682b8c8826c2502a362cccfb40a3]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "describe" : "string",
    "id" : "string",
    "name" : "string",
    "properties" : "object",
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_15}
{noformat}
GET /role/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«RoleEntity»»|#6470682b8c8826c2502a362cccfb40a3]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "describe" : "string",
    "id" : "string",
    "name" : "string",
    "properties" : "object",
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_31}
{noformat}
GET /role/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«RoleEntity»|#9de855e0a731771e1c13e47e25e30380]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "describe" : "string",
    "id" : "string",
    "name" : "string",
    "properties" : "object",
    "status" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_12}
{noformat}
PUT /role/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[RoleEntity|#roleentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role/string
{code}


h6. 请求 body
{code:language=json}
{
  "describe" : "string",
  "id" : "string",
  "name" : "string",
  "properties" : "object",
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_12}
{noformat}
DELETE /role/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/role/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 用户-用户配置管理 {anchor:732b8812ddc8fb9206515dde66d00542}
User Setting Controller


h4. 获取当前用户的配置列表 {anchor:getusingget_1}
{noformat}
GET /user-setting/me/{key}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*key*\\ \\ _必填_||key||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«UserSettingEntity»»|#8e2573283f33b25a5c607100d6cc3f8a]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-setting/me/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "createTime" : "string",
    "describe" : "string",
    "id" : "string",
    "key" : "string",
    "name" : "string",
    "properties" : "object",
    "setting" : "string",
    "settingId" : "string",
    "updateTime" : "string",
    "userId" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取当前用户的配置列表 {anchor:saveusingpatch}
{noformat}
PATCH /user-setting/me/{key}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*key*\\ \\ _必填_||key||string|
|*Body*|*userSettingEntity*\\ \\ _必填_||userSettingEntity||[UserSettingEntity|#usersettingentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-setting/me/string
{code}


h6. 请求 body
{code:language=json}
{
  "createTime" : "string",
  "describe" : "string",
  "id" : "string",
  "key" : "string",
  "name" : "string",
  "properties" : "object",
  "setting" : "string",
  "settingId" : "string",
  "updateTime" : "string",
  "userId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取当前用户的配置 {anchor:getusingget}
{noformat}
GET /user-setting/me/{key}/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Path*|*key*\\ \\ _必填_||key||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«UserSettingEntity»|#bb605f14ea851832f5ce7d794caaceca]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/user-setting/me/string/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "createTime" : "string",
    "describe" : "string",
    "id" : "string",
    "key" : "string",
    "name" : "string",
    "properties" : "object",
    "setting" : "string",
    "settingId" : "string",
    "updateTime" : "string",
    "userId" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 第三方应用-ueditor {anchor:5a859acebd294265ae1441e4781bc213}
Ueditor Controller


h4. 初始化配置 {anchor:runusingpost}
{noformat}
POST /ueditor
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||string|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/ueditor
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
"string"
{code}


h4. 初始化配置 {anchor:runusingget}
{noformat}
GET /ueditor
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||string|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/ueditor
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
"string"
{code}


h3. 组织架构-人员管理 {anchor:39283febcb5761d8b989df5bc32ea44e}
Person Controller


h4. 新增 {anchor:addusingpost_9}
{noformat}
POST /person
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[PersonEntity|#personentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person
{code}


h6. 请求 body
{code:language=json}
{
  "email" : "string",
  "id" : "string",
  "name" : "string",
  "phone" : "string",
  "photo" : "string",
  "properties" : "object",
  "remark" : "string",
  "sex" : "string",
  "status" : "string",
  "userId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_11}
{noformat}
GET /person
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«PersonEntity»»|#35dd428b2aeda09b4672b75af069d2c1]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "email" : "string",
      "id" : "string",
      "name" : "string",
      "phone" : "string",
      "photo" : "string",
      "properties" : "object",
      "remark" : "string",
      "sex" : "string",
      "status" : "string",
      "userId" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_9}
{noformat}
PATCH /person
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[PersonEntity|#personentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person
{code}


h6. 请求 body
{code:language=json}
{
  "email" : "string",
  "id" : "string",
  "name" : "string",
  "phone" : "string",
  "photo" : "string",
  "properties" : "object",
  "remark" : "string",
  "sex" : "string",
  "status" : "string",
  "userId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_11}
{noformat}
GET /person/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增人员信息,并关联用户信息 {anchor:getdetailusingpost}
{noformat}
POST /person/detail
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*bindEntity*\\ \\ _必填_||bindEntity||[PersonAuthBindEntity|#personauthbindentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/detail
{code}


h6. 请求 body
{code:language=json}
{
  "email" : "string",
  "id" : "string",
  "name" : "string",
  "personUser" : {
    "password" : "string",
    "username" : "string"
  },
  "phone" : "string",
  "photo" : "string",
  "positionIds" : [ "string" ],
  "properties" : "object",
  "remark" : "string",
  "sex" : "string",
  "status" : "string",
  "userId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_22}
{noformat}
GET /person/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«PersonEntity»»|#7d0d15c646ed164f964fb8d2f6b3000a]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "email" : "string",
    "id" : "string",
    "name" : "string",
    "phone" : "string",
    "photo" : "string",
    "properties" : "object",
    "remark" : "string",
    "sex" : "string",
    "status" : "string",
    "userId" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取指定岗位的人员 {anchor:getbypositionidusingget}
{noformat}
GET /person/in-position/{positionId}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*positionId*\\ \\ _必填_||positionId||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«PersonEntity»»|#7d0d15c646ed164f964fb8d2f6b3000a]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/in-position/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "email" : "string",
    "id" : "string",
    "name" : "string",
    "phone" : "string",
    "photo" : "string",
    "properties" : "object",
    "remark" : "string",
    "sex" : "string",
    "status" : "string",
    "userId" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 查看当前登录用户的人员信息 {anchor:getloginuserpersonusingget}
{noformat}
GET /person/me
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PersonAuthBindEntity»|#10249428a4d55b979ef50cf7ac890aeb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/me
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "email" : "string",
    "id" : "string",
    "name" : "string",
    "personUser" : {
      "password" : "string",
      "username" : "string"
    },
    "phone" : "string",
    "photo" : "string",
    "positionIds" : [ "string" ],
    "properties" : "object",
    "remark" : "string",
    "sex" : "string",
    "status" : "string",
    "userId" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改个人信息 {anchor:updatemepersoninfousingput}
{noformat}
PUT /person/me
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*bindEntity*\\ \\ _必填_||bindEntity||[PersonAuthBindEntity|#personauthbindentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/me
{code}


h6. 请求 body
{code:language=json}
{
  "email" : "string",
  "id" : "string",
  "name" : "string",
  "personUser" : {
    "password" : "string",
    "username" : "string"
  },
  "phone" : "string",
  "photo" : "string",
  "positionIds" : [ "string" ],
  "properties" : "object",
  "remark" : "string",
  "sex" : "string",
  "status" : "string",
  "userId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 查看当前登录用户的人员权限信息 {anchor:getloginuserpersondetailusingget}
{noformat}
GET /person/me/authorization
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PersonnelAuthorization»|#4c898cb865a7ac8d70a5f816c252d944]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/me/authorization
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "allDepartmentId" : [ "string" ],
    "allDistrictId" : [ "string" ],
    "allOrgId" : [ "string" ],
    "allPositionId" : [ "string" ],
    "departmentIds" : [ {
      "allValue" : [ "string" ],
      "children" : [ {
        "allValue" : [ "string" ],
        "children" : [ "..." ],
        "level" : 0,
        "parent" : "...",
        "value" : "string"
      } ],
      "level" : 0,
      "parent" : "...",
      "value" : "string"
    } ],
    "districtIds" : [ "..." ],
    "orgIds" : [ "..." ],
    "personnel" : {
      "email" : "string",
      "id" : "string",
      "name" : "string",
      "phone" : "string",
      "photo" : "string"
    },
    "positionIds" : [ "..." ],
    "positions" : [ {
      "code" : "string",
      "department" : {
        "code" : "string",
        "id" : "string",
        "name" : "string",
        "org" : {
          "code" : "string",
          "district" : {
            "code" : "string",
            "fullName" : "string",
            "id" : "string",
            "name" : "string"
          },
          "fullName" : "string",
          "id" : "string",
          "name" : "string"
        }
      },
      "id" : "string",
      "name" : "string"
    } ],
    "relations" : {
      "all" : [ {
        "direction" : "string",
        "name" : "string",
        "relation" : "string",
        "target" : "string",
        "targetObject" : "object",
        "type" : "string"
      } ]
    },
    "rootDepartmentId" : [ "string" ],
    "rootDistrictId" : [ "string" ],
    "rootOrgId" : [ "string" ],
    "rootPositionId" : [ "string" ]
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_11}
{noformat}
GET /person/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«PersonEntity»»|#7d0d15c646ed164f964fb8d2f6b3000a]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "email" : "string",
    "id" : "string",
    "name" : "string",
    "phone" : "string",
    "photo" : "string",
    "properties" : "object",
    "remark" : "string",
    "sex" : "string",
    "status" : "string",
    "userId" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_23}
{noformat}
GET /person/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PersonEntity»|#c794f72feaad58a88d3da0cc427d1d9c]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "email" : "string",
    "id" : "string",
    "name" : "string",
    "phone" : "string",
    "photo" : "string",
    "properties" : "object",
    "remark" : "string",
    "sex" : "string",
    "status" : "string",
    "userId" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_8}
{noformat}
PUT /person/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[PersonEntity|#personentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/string
{code}


h6. 请求 body
{code:language=json}
{
  "email" : "string",
  "id" : "string",
  "name" : "string",
  "phone" : "string",
  "photo" : "string",
  "properties" : "object",
  "remark" : "string",
  "sex" : "string",
  "status" : "string",
  "userId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_8}
{noformat}
DELETE /person/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 查看人员详情 {anchor:getdetailusingget}
{noformat}
GET /person/{id}/detail
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PersonAuthBindEntity»|#10249428a4d55b979ef50cf7ac890aeb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/string/detail
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "email" : "string",
    "id" : "string",
    "name" : "string",
    "personUser" : {
      "password" : "string",
      "username" : "string"
    },
    "phone" : "string",
    "photo" : "string",
    "positionIds" : [ "string" ],
    "properties" : "object",
    "remark" : "string",
    "sex" : "string",
    "status" : "string",
    "userId" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改人员信息,并关联用户信息 {anchor:getdetailusingput}
{noformat}
PUT /person/{id}/detail
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*bindEntity*\\ \\ _必填_||bindEntity||[PersonAuthBindEntity|#personauthbindentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/person/string/detail
{code}


h6. 请求 body
{code:language=json}
{
  "email" : "string",
  "id" : "string",
  "name" : "string",
  "personUser" : {
    "password" : "string",
    "username" : "string"
  },
  "phone" : "string",
  "photo" : "string",
  "positionIds" : [ "string" ],
  "properties" : "object",
  "remark" : "string",
  "sex" : "string",
  "status" : "string",
  "userId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 组织架构-关系定义管理 {anchor:3a7e1c4fb3a15ca0dbe26ce8fde9885a}
Relation Define Controller


h4. 新增 {anchor:addusingpost_11}
{noformat}
POST /relation/define
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[RelationDefineEntity|#relationdefineentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/define
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "name" : "string",
  "properties" : "object",
  "status" : "string",
  "typeId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_13}
{noformat}
GET /relation/define
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«RelationDefineEntity»»|#858faa3bec7747a89f047157de5fa7b5]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/define
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "id" : "string",
      "name" : "string",
      "properties" : "object",
      "status" : "string",
      "typeId" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_11}
{noformat}
PATCH /relation/define
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[RelationDefineEntity|#relationdefineentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/define
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "name" : "string",
  "properties" : "object",
  "status" : "string",
  "typeId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_13}
{noformat}
GET /relation/define/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/define/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_26}
{noformat}
GET /relation/define/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«RelationDefineEntity»»|#ee6962a89a88ef309187bb871e9cdfd1]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/define/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "id" : "string",
    "name" : "string",
    "properties" : "object",
    "status" : "string",
    "typeId" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_13}
{noformat}
GET /relation/define/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«RelationDefineEntity»»|#ee6962a89a88ef309187bb871e9cdfd1]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/define/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "id" : "string",
    "name" : "string",
    "properties" : "object",
    "status" : "string",
    "typeId" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_27}
{noformat}
GET /relation/define/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«RelationDefineEntity»|#07e4edac137972c7b8c957a922b992ee]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/define/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "id" : "string",
    "name" : "string",
    "properties" : "object",
    "status" : "string",
    "typeId" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_10}
{noformat}
PUT /relation/define/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[RelationDefineEntity|#relationdefineentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/define/string
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "name" : "string",
  "properties" : "object",
  "status" : "string",
  "typeId" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_10}
{noformat}
DELETE /relation/define/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/define/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 组织架构-关系管理 {anchor:9a921aa215e0d7c7df3e5733b82125bc}
Relation Info Controller


h4. 新增 {anchor:addusingpost_12}
{noformat}
POST /relation/info
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[RelationInfoEntity|#relationinfoentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/info
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "properties" : "object",
  "relationFrom" : "string",
  "relationId" : "string",
  "relationTo" : "string",
  "relationTypeFrom" : "string",
  "relationTypeTo" : "string",
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_14}
{noformat}
GET /relation/info
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«RelationInfoEntity»»|#662abf311f6756ce1515cfc1f3d6497b]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/info
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "id" : "string",
      "properties" : "object",
      "relationFrom" : "string",
      "relationId" : "string",
      "relationTo" : "string",
      "relationTypeFrom" : "string",
      "relationTypeTo" : "string",
      "status" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_12}
{noformat}
PATCH /relation/info
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[RelationInfoEntity|#relationinfoentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/info
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "properties" : "object",
  "relationFrom" : "string",
  "relationId" : "string",
  "relationTo" : "string",
  "relationTypeFrom" : "string",
  "relationTypeTo" : "string",
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_14}
{noformat}
GET /relation/info/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/info/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_28}
{noformat}
GET /relation/info/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«RelationInfoEntity»»|#dbc09948d0a6db8c21cecb87af87fa6f]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/info/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "id" : "string",
    "properties" : "object",
    "relationFrom" : "string",
    "relationId" : "string",
    "relationTo" : "string",
    "relationTypeFrom" : "string",
    "relationTypeTo" : "string",
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_14}
{noformat}
GET /relation/info/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«RelationInfoEntity»»|#dbc09948d0a6db8c21cecb87af87fa6f]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/info/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "id" : "string",
    "properties" : "object",
    "relationFrom" : "string",
    "relationId" : "string",
    "relationTo" : "string",
    "relationTypeFrom" : "string",
    "relationTypeTo" : "string",
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_29}
{noformat}
GET /relation/info/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«RelationInfoEntity»|#a8d04810db9cc799f48ca42652e0514e]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/info/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "id" : "string",
    "properties" : "object",
    "relationFrom" : "string",
    "relationId" : "string",
    "relationTo" : "string",
    "relationTypeFrom" : "string",
    "relationTypeTo" : "string",
    "status" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_11}
{noformat}
PUT /relation/info/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[RelationInfoEntity|#relationinfoentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/info/string
{code}


h6. 请求 body
{code:language=json}
{
  "id" : "string",
  "properties" : "object",
  "relationFrom" : "string",
  "relationId" : "string",
  "relationTo" : "string",
  "relationTypeFrom" : "string",
  "relationTypeTo" : "string",
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_11}
{noformat}
DELETE /relation/info/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/relation/info/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 组织架构-机构管理 {anchor:2377f8482fc01f49e4467e995f432db7}
Organizational Controller


h4. 新增 {anchor:addusingpost_7}
{noformat}
POST /organizational
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[OrganizationalEntity|#organizationalentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "districtId" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "optionalRoles" : [ "string" ],
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "districtId" : "string",
  "fullName" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "optionalRoles" : [ "string" ],
  "orgId" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_9}
{noformat}
GET /organizational
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«OrganizationalEntity»»|#1e34e66cd932a6e9a2a19ae61f935332]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "children" : [ {
        "children" : [ "..." ],
        "code" : "string",
        "districtId" : "string",
        "fullName" : "string",
        "id" : "string",
        "level" : 0,
        "name" : "string",
        "optionalRoles" : [ "string" ],
        "orgId" : "string",
        "parentId" : "string",
        "path" : "string",
        "properties" : "object",
        "sortIndex" : 0,
        "status" : "string"
      } ],
      "code" : "string",
      "districtId" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "optionalRoles" : [ "string" ],
      "orgId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_7}
{noformat}
PATCH /organizational
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[OrganizationalEntity|#organizationalentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "districtId" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "optionalRoles" : [ "string" ],
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "districtId" : "string",
  "fullName" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "optionalRoles" : [ "string" ],
  "orgId" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 批量修改数据 {anchor:updatebatchusingpatch_1}
{noformat}
PATCH /organizational/batch
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*batch*\\ \\ _必填_||batch||< [OrganizationalEntity|#organizationalentity] > array|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational/batch
{code}


h6. 请求 body
{code:language=json}
[ {
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "districtId" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "optionalRoles" : [ "string" ],
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "districtId" : "string",
  "fullName" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "optionalRoles" : [ "string" ],
  "orgId" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
} ]
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_9}
{noformat}
GET /organizational/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_18}
{noformat}
GET /organizational/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«OrganizationalEntity»»|#3dd66bd50330e0634288732801c6eae6]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "districtId" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "optionalRoles" : [ "string" ],
      "orgId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "districtId" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "optionalRoles" : [ "string" ],
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_9}
{noformat}
GET /organizational/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«OrganizationalEntity»»|#3dd66bd50330e0634288732801c6eae6]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "districtId" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "optionalRoles" : [ "string" ],
      "orgId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "districtId" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "optionalRoles" : [ "string" ],
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_19}
{noformat}
GET /organizational/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«OrganizationalEntity»|#05d6cc19f6ee049e0ac5098efd85ec2d]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "districtId" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "optionalRoles" : [ "string" ],
      "orgId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "districtId" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "optionalRoles" : [ "string" ],
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_6}
{noformat}
PUT /organizational/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[OrganizationalEntity|#organizationalentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational/string
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "districtId" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "optionalRoles" : [ "string" ],
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "districtId" : "string",
  "fullName" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "optionalRoles" : [ "string" ],
  "orgId" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_6}
{noformat}
DELETE /organizational/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 禁用机构 {anchor:disableusingput_1}
{noformat}
PUT /organizational/{id}/disable
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«boolean»|#bbdc11e8c14b5b13fda321a82dc3a3ac]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational/string/disable
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : false,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 启用机构 {anchor:enableusingput_1}
{noformat}
PUT /organizational/{id}/enable
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«boolean»|#bbdc11e8c14b5b13fda321a82dc3a3ac]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/organizational/string/enable
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : false,
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 组织架构-职位管理 {anchor:09a3305feeec20b5c8b1624a70051f7d}
Position Controller


h4. 新增 {anchor:addusingpost_10}
{noformat}
POST /position
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[PositionEntity|#positionentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/position
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "positionId" : "string",
    "properties" : "object",
    "remark" : "string",
    "roles" : [ "string" ],
    "sortIndex" : 0
  } ],
  "departmentId" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "positionId" : "string",
  "properties" : "object",
  "remark" : "string",
  "roles" : [ "string" ],
  "sortIndex" : 0
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_12}
{noformat}
GET /position
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«PositionEntity»»|#0b9846aedba34500c09ff8c883f89c41]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/position
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "children" : [ {
        "children" : [ "..." ],
        "departmentId" : "string",
        "id" : "string",
        "level" : 0,
        "name" : "string",
        "parentId" : "string",
        "path" : "string",
        "positionId" : "string",
        "properties" : "object",
        "remark" : "string",
        "roles" : [ "string" ],
        "sortIndex" : 0
      } ],
      "departmentId" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "positionId" : "string",
      "properties" : "object",
      "remark" : "string",
      "roles" : [ "string" ],
      "sortIndex" : 0
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_10}
{noformat}
PATCH /position
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[PositionEntity|#positionentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/position
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "positionId" : "string",
    "properties" : "object",
    "remark" : "string",
    "roles" : [ "string" ],
    "sortIndex" : 0
  } ],
  "departmentId" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "positionId" : "string",
  "properties" : "object",
  "remark" : "string",
  "roles" : [ "string" ],
  "sortIndex" : 0
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_12}
{noformat}
GET /position/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/position/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_24}
{noformat}
GET /position/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«PositionEntity»»|#4a3d2505235b212b6d947baba2efb5e6]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/position/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "departmentId" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "positionId" : "string",
      "properties" : "object",
      "remark" : "string",
      "roles" : [ "string" ],
      "sortIndex" : 0
    } ],
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "positionId" : "string",
    "properties" : "object",
    "remark" : "string",
    "roles" : [ "string" ],
    "sortIndex" : 0
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_12}
{noformat}
GET /position/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«PositionEntity»»|#4a3d2505235b212b6d947baba2efb5e6]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/position/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "departmentId" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "positionId" : "string",
      "properties" : "object",
      "remark" : "string",
      "roles" : [ "string" ],
      "sortIndex" : 0
    } ],
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "positionId" : "string",
    "properties" : "object",
    "remark" : "string",
    "roles" : [ "string" ],
    "sortIndex" : 0
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_25}
{noformat}
GET /position/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PositionEntity»|#81d3f00a16ad771d3c6fbdd99e002afb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/position/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "children" : [ {
      "children" : [ "..." ],
      "departmentId" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "positionId" : "string",
      "properties" : "object",
      "remark" : "string",
      "roles" : [ "string" ],
      "sortIndex" : 0
    } ],
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "positionId" : "string",
    "properties" : "object",
    "remark" : "string",
    "roles" : [ "string" ],
    "sortIndex" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_9}
{noformat}
PUT /position/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[PositionEntity|#positionentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/position/string
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "positionId" : "string",
    "properties" : "object",
    "remark" : "string",
    "roles" : [ "string" ],
    "sortIndex" : 0
  } ],
  "departmentId" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "positionId" : "string",
  "properties" : "object",
  "remark" : "string",
  "roles" : [ "string" ],
  "sortIndex" : 0
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_9}
{noformat}
DELETE /position/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/position/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 组织架构-行政区划管理 {anchor:906d6b728212af8477e2d418ee830da4}
District Controller


h4. 新增 {anchor:addusingpost_2}
{noformat}
POST /district
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[DistrictEntity|#districtentity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "describe" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "levelCode" : "string",
    "levelName" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "describe" : "string",
  "fullName" : "string",
  "id" : "string",
  "level" : 0,
  "levelCode" : "string",
  "levelName" : "string",
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_2}
{noformat}
GET /district
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«DistrictEntity»»|#abaea98c9cec2051a3588b919068948f]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "children" : [ {
        "children" : [ "..." ],
        "code" : "string",
        "describe" : "string",
        "fullName" : "string",
        "id" : "string",
        "level" : 0,
        "levelCode" : "string",
        "levelName" : "string",
        "name" : "string",
        "parentId" : "string",
        "path" : "string",
        "properties" : "object",
        "sortIndex" : 0,
        "status" : "string"
      } ],
      "code" : "string",
      "describe" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "levelCode" : "string",
      "levelName" : "string",
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_2}
{noformat}
PATCH /district
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[DistrictEntity|#districtentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "describe" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "levelCode" : "string",
    "levelName" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "describe" : "string",
  "fullName" : "string",
  "id" : "string",
  "level" : 0,
  "levelCode" : "string",
  "levelName" : "string",
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 获取全部行政区划 {anchor:allusingget}
{noformat}
GET /district/all
{noformat}


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DistrictEntity»»|#020e52a447243dd2c4d0bef080da4b24]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/all
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "describe" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "levelCode" : "string",
      "levelName" : "string",
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "describe" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "levelCode" : "string",
    "levelName" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 批量修改数据 {anchor:updatebatchusingpatch}
{noformat}
PATCH /district/batch
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*batch*\\ \\ _必填_||batch||< [DistrictEntity|#districtentity] > array|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«Void»|#6c061a07afa1c9738e33d1b5ec1728a9]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/batch
{code}


h6. 请求 body
{code:language=json}
[ {
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "describe" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "levelCode" : "string",
    "levelName" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "describe" : "string",
  "fullName" : "string",
  "id" : "string",
  "level" : 0,
  "levelCode" : "string",
  "levelName" : "string",
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
} ]
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据行政区划代码获取 {anchor:getbycodeusingget}
{noformat}
GET /district/code/{code}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*code*\\ \\ _必填_||code||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«DistrictEntity»|#e9e4c971e48ff61d32412141df044f36]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/code/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "describe" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "levelCode" : "string",
      "levelName" : "string",
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "describe" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "levelCode" : "string",
    "levelName" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_2}
{noformat}
GET /district/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_4}
{noformat}
GET /district/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DistrictEntity»»|#020e52a447243dd2c4d0bef080da4b24]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "describe" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "levelCode" : "string",
      "levelName" : "string",
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "describe" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "levelCode" : "string",
    "levelName" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_2}
{noformat}
GET /district/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DistrictEntity»»|#020e52a447243dd2c4d0bef080da4b24]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "describe" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "levelCode" : "string",
      "levelName" : "string",
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "describe" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "levelCode" : "string",
    "levelName" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_5}
{noformat}
GET /district/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«DistrictEntity»|#e9e4c971e48ff61d32412141df044f36]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "describe" : "string",
      "fullName" : "string",
      "id" : "string",
      "level" : 0,
      "levelCode" : "string",
      "levelName" : "string",
      "name" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "describe" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "levelCode" : "string",
    "levelName" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_2}
{noformat}
PUT /district/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[DistrictEntity|#districtentity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/string
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "describe" : "string",
    "fullName" : "string",
    "id" : "string",
    "level" : 0,
    "levelCode" : "string",
    "levelName" : "string",
    "name" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "describe" : "string",
  "fullName" : "string",
  "id" : "string",
  "level" : 0,
  "levelCode" : "string",
  "levelName" : "string",
  "name" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_2}
{noformat}
DELETE /district/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 禁用机构 {anchor:disableusingput}
{noformat}
PUT /district/{id}/disable
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«boolean»|#bbdc11e8c14b5b13fda321a82dc3a3ac]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/string/disable
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : false,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 启用机构 {anchor:enableusingput}
{noformat}
PUT /district/{id}/enable
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«boolean»|#bbdc11e8c14b5b13fda321a82dc3a3ac]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/district/string/enable
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : false,
  "status" : 0,
  "timestamp" : 0
}
{code}


h3. 组织架构-部门管理 {anchor:5c1c179c04aaa1617188d78a6a5c1e7b}
Department Controller


h4. 新增 {anchor:addusingpost_1}
{noformat}
POST /department
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[DepartmentEntity|#departmententity]|


h5. 响应

||HTTP代码||说明||类型||
|*201*||Created||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/department
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "departmentId" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "orgId" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 201
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件查询 {anchor:listusingget_1}
{noformat}
GET /department
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«PagerResult«DepartmentEntity»»|#2d642eb6e8bf8069ea7d8748f89a1953]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/department
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "data" : [ {
      "children" : [ {
        "children" : [ "..." ],
        "code" : "string",
        "departmentId" : "string",
        "id" : "string",
        "level" : 0,
        "name" : "string",
        "orgId" : "string",
        "parentId" : "string",
        "path" : "string",
        "properties" : "object",
        "sortIndex" : 0,
        "status" : "string"
      } ],
      "code" : "string",
      "departmentId" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "orgId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "total" : 0
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 新增或者修改 {anchor:saveorupdateusingpatch_1}
{noformat}
PATCH /department
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Body*|*data*\\ \\ _必填_||data||[DepartmentEntity|#departmententity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/department
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "departmentId" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "orgId" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据动态条件统计 {anchor:countusingget_1}
{noformat}
GET /department/count
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/department/count
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询多条记录 {anchor:getbyprimarykeyusingget_2}
{noformat}
GET /department/ids
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Query*|*ids*\\ \\ _必填_||ids||< string > array(multi)|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DepartmentEntity»»|#27bd3061635415c4ea0c73c653f47acf]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/department/ids
{code}


h6. 请求 query
{code:language=json}
{
  "ids" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "departmentId" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "orgId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 不分页动态查询 {anchor:listnopagingusingget_1}
{noformat}
GET /department/no-paging
{noformat}


h5. 参数

||类型||名称||类型||
|*Query*|*excludes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*forUpdate*\\ \\ _可选_||boolean|
|*Query*|*includes*\\ \\ _可选_||< string > array(multi)|
|*Query*|*pageIndex*\\ \\ _可选_||integer (int32)|
|*Query*|*pageSize*\\ \\ _可选_||integer (int32)|
|*Query*|*paging*\\ \\ _可选_||boolean|
|*Query*|*sorts[0].name*\\ \\ _可选_||string|
|*Query*|*sorts[0].order*\\ \\ _可选_||string|
|*Query*|*sorts[0].type*\\ \\ _可选_||string|
|*Query*|*terms[0].column*\\ \\ _可选_||string|
|*Query*|*terms[0].termType*\\ \\ _可选_||string|
|*Query*|*terms[0].type*\\ \\ _可选_||enum (or, and)|
|*Query*|*terms[0].value*\\ \\ _可选_||object|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«List«DepartmentEntity»»|#27bd3061635415c4ea0c73c653f47acf]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/department/no-paging
{code}


h6. 请求 query
{code:language=json}
{
  "excludes" : "string",
  "forUpdate" : true,
  "includes" : "string",
  "pageIndex" : 0,
  "pageSize" : 0,
  "paging" : true,
  "sorts[0].name" : "string",
  "sorts[0].order" : "string",
  "sorts[0].type" : "string",
  "terms[0].column" : "string",
  "terms[0].termType" : "string",
  "terms[0].type" : "string",
  "terms[0].value" : "object"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : [ {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "departmentId" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "orgId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 根据主键查询 {anchor:getbyprimarykeyusingget_3}
{noformat}
GET /department/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«DepartmentEntity»|#494d2e8ada457977fe25c668a34a06f7]|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/department/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : {
    "children" : [ {
      "children" : [ "..." ],
      "code" : "string",
      "departmentId" : "string",
      "id" : "string",
      "level" : 0,
      "name" : "string",
      "orgId" : "string",
      "parentId" : "string",
      "path" : "string",
      "properties" : "object",
      "sortIndex" : 0,
      "status" : "string"
    } ],
    "code" : "string",
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  },
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 修改数据 {anchor:updatebyprimarykeyusingput_1}
{noformat}
PUT /department/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|
|*Body*|*data*\\ \\ _必填_||data||[DepartmentEntity|#departmententity]|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«int»|#d53a2c1e07a660f2c3f1b54e6a7c98bb]|
|*201*||Created||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|
|*404*||Not Found||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/department/string
{code}


h6. 请求 body
{code:language=json}
{
  "children" : [ {
    "children" : [ "..." ],
    "code" : "string",
    "departmentId" : "string",
    "id" : "string",
    "level" : 0,
    "name" : "string",
    "orgId" : "string",
    "parentId" : "string",
    "path" : "string",
    "properties" : "object",
    "sortIndex" : 0,
    "status" : "string"
  } ],
  "code" : "string",
  "departmentId" : "string",
  "id" : "string",
  "level" : 0,
  "name" : "string",
  "orgId" : "string",
  "parentId" : "string",
  "path" : "string",
  "properties" : "object",
  "sortIndex" : 0,
  "status" : "string"
}
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : 0,
  "status" : 0,
  "timestamp" : 0
}
{code}


h4. 删除数据 {anchor:deletebyprimarykeyusingdelete_1}
{noformat}
DELETE /department/{id}
{noformat}


h5. 参数

||类型||名称||说明||类型||
|*Path*|*id*\\ \\ _必填_||id||string|


h5. 响应

||HTTP代码||说明||类型||
|*200*||OK||[ResponseMessage«string»|#7706c642a9473cc1b49b8f456cc26073]|
|*204*||No Content||无内容|
|*401*||Unauthorized||无内容|
|*403*||Forbidden||无内容|


h5. 消耗

* {noformat}application/json{noformat}


h5. 生成

* {noformat}*/*{noformat}


h5. HTTP请求示例

h6. 请求 path
{code}
/department/string
{code}


h5. HTTP响应示例

h6. 响应 200
{code:language=json}
{
  "message" : "string",
  "result" : "string",
  "status" : 0,
  "timestamp" : 0
}
{code}



